{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3","program":"/home/tardigrade/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","fff","--edition=2018","/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"derive\"","--cfg","feature=\"fff_derive\"","-C","metadata=f4a07a9c7bcab166","-C","extra-filename=-f4a07a9c7bcab166","--out-dir","/home/tardigrade/filecoin/filecoin_loans_test/filecoin-signing-tools/extras/target/rls/debug/deps","-L","dependency=/home/tardigrade/filecoin/filecoin_loans_test/filecoin-signing-tools/extras/target/rls/debug/deps","--extern","byteorder=/home/tardigrade/filecoin/filecoin_loans_test/filecoin-signing-tools/extras/target/rls/debug/deps/libbyteorder-17721b70d6c97f3c.rmeta","--extern","fff_derive=/home/tardigrade/filecoin/filecoin_loans_test/filecoin-signing-tools/extras/target/rls/debug/deps/libfff_derive-e28c42c140c139dd.so","--extern","lazy_static=/home/tardigrade/filecoin/filecoin_loans_test/filecoin-signing-tools/extras/target/rls/debug/deps/liblazy_static-00938df4cf19b09a.rmeta","--extern","rand_core=/home/tardigrade/filecoin/filecoin_loans_test/filecoin-signing-tools/extras/target/rls/debug/deps/librand_core-30899c005fc18dbb.rmeta","--cap-lints","allow","-L","native=/home/tardigrade/filecoin/filecoin_loans_test/filecoin-signing-tools/extras/target/rls/debug/build/fff-9d58e5974e130935/out","-l","static=ff-derive-crypto","--error-format=json","--sysroot","/home/tardigrade/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/tardigrade/filecoin/filecoin_loans_test/filecoin-signing-tools/extras/target/rls/debug/deps/libfff-f4a07a9c7bcab166.rmeta"},"prelude":{"crate_id":{"name":"fff","disambiguator":[8160023672504636397,12332990753035078584]},"crate_root":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src","external_crates":[{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12933703438800314702,5774803219644544316]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18134888982608726624,15478788479473023395]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6673302632599048863,4691371433878452070]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11457885127507258025,479752930606968628]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6007655421670680970,17748288058820543149]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4051320655186846034,14773827427477085591]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3672675044024306215,7179779047398453100]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14739525726177289408,3061276640434149652]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2246841610299105657,12905561680815043912]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4036557704906104068,994131407893854156]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7443407023664770875,11250036483448109314]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[10148669557414888454,6400214184476534778]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4006540472161665961,15205760237192158299]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[16043199729901662453,7825522302763349882]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[5738570549504868290,14845130516100231771]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[6807687926185025542,9498922200428406688]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6171827839412267364,4338689175470013405]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","num":18,"id":{"name":"fff_derive","disambiguator":[6800857497117910510,14434349483140128942]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","num":19,"id":{"name":"rand_core","disambiguator":[13622008010652770600,5228419574657237112]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","num":20,"id":{"name":"getrandom","disambiguator":[9053270876882226234,15932717206293578789]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","num":21,"id":{"name":"cfg_if","disambiguator":[11748229077813686416,18120593503603249335]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","num":22,"id":{"name":"libc","disambiguator":[5232681380589546530,8318862632638160671]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","num":23,"id":{"name":"byteorder","disambiguator":[10836038553012167767,15297481873074233491]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/asm.rs","num":24,"id":{"name":"lazy_static","disambiguator":[14686203425487285381,7060421029306645735]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/asm.rs","num":25,"id":{"name":"spin","disambiguator":[13095456474862605238,4991108092442922330]}}],"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":0,"byte_end":11458,"line_start":1,"line_end":403,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":302,"byte_end":303,"line_start":12,"line_end":12,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":391,"byte_end":392,"line_start":18,"line_end":18,"column_start":14,"column_end":15},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":10404,"byte_end":10405,"line_start":368,"line_end":368,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":0,"byte_end":11458,"line_start":1,"line_end":403,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":113},{"krate":0,"index":126},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":128},{"krate":0,"index":132},{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":88},{"krate":0,"index":134},{"krate":0,"index":138},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":97},{"krate":0,"index":98}],"decl_id":null,"docs":" This crate provides traits for working with finite fields.\n","sig":null,"attributes":[{"value":"/ This crate provides traits for working with finite fields.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":0,"byte_end":62,"line_start":1,"line_end":1,"column_start":1,"column_end":63}},{"value":"deny(intra_doc_link_resolution_failure)","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":118,"byte_end":161,"line_start":4,"line_end":4,"column_start":1,"column_end":44}},{"value":"allow(unused_imports)","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":162,"byte_end":187,"line_start":5,"line_end":5,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":102},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/asm.rs","byte_start":11507,"byte_end":11535,"line_start":2,"line_end":2,"column_start":20,"column_end":48},"name":"CPU_SUPPORTS_ADX_INSTRUCTION","qualname":"::asm::CPU_SUPPORTS_ADX_INSTRUCTION","value":"CPU_SUPPORTS_ADX_INSTRUCTION {  }","parent":null,"children":[{"krate":0,"index":103}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/lib.rs","byte_start":9058263,"byte_end":9058301,"line_start":155,"line_end":155,"column_start":9,"column_end":47}},{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/lib.rs","byte_start":9058310,"byte_end":9058340,"line_start":156,"line_end":156,"column_start":9,"column_end":39}},{"value":"allow(dead_code)","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/lib.rs","byte_start":9058349,"byte_end":9058368,"line_start":157,"line_end":157,"column_start":9,"column_end":28}}]},{"kind":"Static","id":{"krate":0,"index":104},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/asm.rs","byte_start":11507,"byte_end":11535,"line_start":2,"line_end":2,"column_start":20,"column_end":48},"name":"CPU_SUPPORTS_ADX_INSTRUCTION","qualname":"::asm::CPU_SUPPORTS_ADX_INSTRUCTION","value":"CPU_SUPPORTS_ADX_INSTRUCTION","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":11},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/asm.rs","byte_start":11722,"byte_end":11739,"line_start":10,"line_end":10,"column_start":8,"column_end":25},"name":"mod_mul_4w_assign","qualname":"::asm::mod_mul_4w_assign","value":"pub fn mod_mul_4w_assign(&mut [u64; ], &[u64; ])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":23},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":550,"byte_end":555,"line_start":26,"line_end":26,"column_start":11,"column_end":16},"name":"Field","qualname":"::Field","value":"Field: Sized + Eq + Copy + Clone + Send + Sync + fmt::Debug + fmt::Display + 'static","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37}],"decl_id":null,"docs":" This trait represents an element of a field.\n","sig":null,"attributes":[{"value":"/ This trait represents an element of a field.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":491,"byte_end":539,"line_start":25,"line_end":25,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":729,"byte_end":735,"line_start":30,"line_end":30,"column_start":8,"column_end":14},"name":"random","qualname":"::Field::random","value":"pub fn random<R: RngCore>(&mut R) -> Self","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":" Returns an element chosen uniformly at random using a user-provided RNG.\n","sig":null,"attributes":[{"value":"/ Returns an element chosen uniformly at random using a user-provided RNG.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":645,"byte_end":721,"line_start":29,"line_end":29,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":848,"byte_end":852,"line_start":33,"line_end":33,"column_start":8,"column_end":12},"name":"zero","qualname":"::Field::zero","value":"pub fn zero() -> Self","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":" Returns the zero element of the field, the additive identity.\n","sig":null,"attributes":[{"value":"/ Returns the zero element of the field, the additive identity.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":775,"byte_end":840,"line_start":32,"line_end":32,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":947,"byte_end":950,"line_start":36,"line_end":36,"column_start":8,"column_end":11},"name":"one","qualname":"::Field::one","value":"pub fn one() -> Self","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":" Returns the one element of the field, the multiplicative identity.\n","sig":null,"attributes":[{"value":"/ Returns the one element of the field, the multiplicative identity.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":869,"byte_end":939,"line_start":35,"line_end":35,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":1017,"byte_end":1024,"line_start":39,"line_end":39,"column_start":8,"column_end":15},"name":"is_zero","qualname":"::Field::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":" Returns true iff this element is zero.\n","sig":null,"attributes":[{"value":"/ Returns true iff this element is zero.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":967,"byte_end":1009,"line_start":38,"line_end":38,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":1079,"byte_end":1085,"line_start":42,"line_end":42,"column_start":8,"column_end":14},"name":"square","qualname":"::Field::square","value":"pub fn square(&mut Self)","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":" Squares this element.\n","sig":null,"attributes":[{"value":"/ Squares this element.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":1046,"byte_end":1071,"line_start":41,"line_end":41,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":1136,"byte_end":1142,"line_start":45,"line_end":45,"column_start":8,"column_end":14},"name":"double","qualname":"::Field::double","value":"pub fn double(&mut Self)","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":" Doubles this element.\n","sig":null,"attributes":[{"value":"/ Doubles this element.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":1103,"byte_end":1128,"line_start":44,"line_end":44,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":1193,"byte_end":1199,"line_start":48,"line_end":48,"column_start":8,"column_end":14},"name":"negate","qualname":"::Field::negate","value":"pub fn negate(&mut Self)","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":" Negates this element.\n","sig":null,"attributes":[{"value":"/ Negates this element.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":1160,"byte_end":1185,"line_start":47,"line_end":47,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":1266,"byte_end":1276,"line_start":51,"line_end":51,"column_start":8,"column_end":18},"name":"add_assign","qualname":"::Field::add_assign","value":"pub fn add_assign(&mut Self, &Self)","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":" Adds another element to this element.\n","sig":null,"attributes":[{"value":"/ Adds another element to this element.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":1217,"byte_end":1258,"line_start":50,"line_end":50,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":1364,"byte_end":1374,"line_start":54,"line_end":54,"column_start":8,"column_end":18},"name":"sub_assign","qualname":"::Field::sub_assign","value":"pub fn sub_assign(&mut Self, &Self)","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":" Subtracts another element from this element.\n","sig":null,"attributes":[{"value":"/ Subtracts another element from this element.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":1308,"byte_end":1356,"line_start":53,"line_end":53,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":1461,"byte_end":1471,"line_start":57,"line_end":57,"column_start":8,"column_end":18},"name":"mul_assign","qualname":"::Field::mul_assign","value":"pub fn mul_assign(&mut Self, &Self)","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":" Multiplies another element by this element.\n","sig":null,"attributes":[{"value":"/ Multiplies another element by this element.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":1406,"byte_end":1453,"line_start":56,"line_end":56,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":1579,"byte_end":1586,"line_start":60,"line_end":60,"column_start":8,"column_end":15},"name":"inverse","qualname":"::Field::inverse","value":"pub fn inverse(&Self) -> Option<Self>","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":" Computes the multiplicative inverse of this element, if nonzero.\n","sig":null,"attributes":[{"value":"/ Computes the multiplicative inverse of this element, if nonzero.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":1503,"byte_end":1571,"line_start":59,"line_end":59,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":1731,"byte_end":1744,"line_start":64,"line_end":64,"column_start":8,"column_end":21},"name":"frobenius_map","qualname":"::Field::frobenius_map","value":"pub fn frobenius_map(&mut Self, usize)","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":" Exponentiates this element by a power of the base prime modulus via\n the Frobenius automorphism.\n","sig":null,"attributes":[{"value":"/ Exponentiates this element by a power of the base prime modulus via","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":1616,"byte_end":1687,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/ the Frobenius automorphism.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":1692,"byte_end":1723,"line_start":63,"line_end":63,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":1895,"byte_end":1898,"line_start":68,"line_end":68,"column_start":8,"column_end":11},"name":"pow","qualname":"::Field::pow","value":"pub fn pow<S: AsRef<[u64]>>(&Self, S) -> Self","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":" Exponentiates this element by a number represented with `u64` limbs,\n least significant digit first.\n","sig":null,"attributes":[{"value":"/ Exponentiates this element by a number represented with `u64` limbs,","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":1776,"byte_end":1848,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ least significant digit first.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":1853,"byte_end":1887,"line_start":67,"line_end":67,"column_start":5,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":39},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":2390,"byte_end":2399,"line_start":90,"line_end":90,"column_start":11,"column_end":20},"name":"SqrtField","qualname":"::SqrtField","value":"SqrtField: Field","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41}],"decl_id":null,"docs":" This trait represents an element of a field that has a square root operation described for it.\n","sig":null,"attributes":[{"value":"/ This trait represents an element of a field that has a square root operation described for it.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":2281,"byte_end":2379,"line_start":89,"line_end":89,"column_start":1,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":2474,"byte_end":2482,"line_start":92,"line_end":92,"column_start":8,"column_end":16},"name":"legendre","qualname":"::SqrtField::legendre","value":"pub fn legendre(&Self) -> LegendreSymbol","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Returns the Legendre symbol of the field element.\n","sig":null,"attributes":[{"value":"/ Returns the Legendre symbol of the field element.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":2413,"byte_end":2466,"line_start":91,"line_end":91,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":2607,"byte_end":2611,"line_start":96,"line_end":96,"column_start":8,"column_end":12},"name":"sqrt","qualname":"::SqrtField::sqrt","value":"pub fn sqrt(&Self) -> Option<Self>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Returns the square root of the field element, if it is\n quadratic residue.\n","sig":null,"attributes":[{"value":"/ Returns the square root of the field element, if it is","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":2514,"byte_end":2572,"line_start":94,"line_end":94,"column_start":5,"column_end":63}},{"value":"/ quadratic residue.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":2577,"byte_end":2599,"line_start":95,"line_end":95,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":42},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":2858,"byte_end":2872,"line_start":102,"line_end":102,"column_start":11,"column_end":25},"name":"PrimeFieldRepr","qualname":"::PrimeFieldRepr","value":"PrimeFieldRepr: Sized + Copy + Clone + Eq + Ord + Send + Sync + Default + fmt::Debug +\nfmt::Display + 'static + AsRef<[u64]> + AsMut<[u64]> + From<u64>","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":58},{"krate":0,"index":63},{"krate":0,"index":68}],"decl_id":null,"docs":" This trait represents a wrapper around a biginteger which can encode any element of a particular\n prime field. It is a smart wrapper around a sequence of `u64` limbs, least-significant digit\n first.\n","sig":null,"attributes":[{"value":"/ This trait represents a wrapper around a biginteger which can encode any element of a particular","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":2639,"byte_end":2739,"line_start":99,"line_end":99,"column_start":1,"column_end":101}},{"value":"/ prime field. It is a smart wrapper around a sequence of `u64` limbs, least-significant digit","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":2740,"byte_end":2836,"line_start":100,"line_end":100,"column_start":1,"column_end":97}},{"value":"/ first.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":2837,"byte_end":2847,"line_start":101,"line_end":101,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":3129,"byte_end":3141,"line_start":119,"line_end":119,"column_start":8,"column_end":20},"name":"sub_noborrow","qualname":"::PrimeFieldRepr::sub_noborrow","value":"pub fn sub_noborrow(&mut Self, &Self)","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Subtract another represetation from this one.\n","sig":null,"attributes":[{"value":"/ Subtract another represetation from this one.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":3072,"byte_end":3121,"line_start":118,"line_end":118,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":3224,"byte_end":3235,"line_start":122,"line_end":122,"column_start":8,"column_end":19},"name":"add_nocarry","qualname":"::PrimeFieldRepr::add_nocarry","value":"pub fn add_nocarry(&mut Self, &Self)","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Add another representation to this one.\n","sig":null,"attributes":[{"value":"/ Add another representation to this one.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":3173,"byte_end":3216,"line_start":121,"line_end":121,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":3368,"byte_end":3376,"line_start":126,"line_end":126,"column_start":8,"column_end":16},"name":"num_bits","qualname":"::PrimeFieldRepr::num_bits","value":"pub fn num_bits(&Self) -> u32","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Compute the number of bits needed to encode this number. Always a\n multiple of 64.\n","sig":null,"attributes":[{"value":"/ Compute the number of bits needed to encode this number. Always a","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":3267,"byte_end":3336,"line_start":124,"line_end":124,"column_start":5,"column_end":74}},{"value":"/ multiple of 64.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":3341,"byte_end":3360,"line_start":125,"line_end":125,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":3446,"byte_end":3453,"line_start":129,"line_end":129,"column_start":8,"column_end":15},"name":"is_zero","qualname":"::PrimeFieldRepr::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Returns true iff this number is zero.\n","sig":null,"attributes":[{"value":"/ Returns true iff this number is zero.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":3397,"byte_end":3438,"line_start":128,"line_end":128,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":3523,"byte_end":3529,"line_start":132,"line_end":132,"column_start":8,"column_end":14},"name":"is_odd","qualname":"::PrimeFieldRepr::is_odd","value":"pub fn is_odd(&Self) -> bool","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Returns true iff this number is odd.\n","sig":null,"attributes":[{"value":"/ Returns true iff this number is odd.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":3475,"byte_end":3515,"line_start":131,"line_end":131,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":3600,"byte_end":3607,"line_start":135,"line_end":135,"column_start":8,"column_end":15},"name":"is_even","qualname":"::PrimeFieldRepr::is_even","value":"pub fn is_even(&Self) -> bool","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Returns true iff this number is even.\n","sig":null,"attributes":[{"value":"/ Returns true iff this number is even.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":3551,"byte_end":3592,"line_start":134,"line_end":134,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":3724,"byte_end":3728,"line_start":139,"line_end":139,"column_start":8,"column_end":12},"name":"div2","qualname":"::PrimeFieldRepr::div2","value":"pub fn div2(&mut Self)","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Performs a rightwise bitshift of this number, effectively dividing\n it by 2.\n","sig":null,"attributes":[{"value":"/ Performs a rightwise bitshift of this number, effectively dividing","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":3629,"byte_end":3699,"line_start":137,"line_end":137,"column_start":5,"column_end":75}},{"value":"/ it by 2.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":3704,"byte_end":3716,"line_start":138,"line_end":138,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":3818,"byte_end":3821,"line_start":142,"line_end":142,"column_start":8,"column_end":11},"name":"shr","qualname":"::PrimeFieldRepr::shr","value":"pub fn shr(&mut Self, u32)","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Performs a rightwise bitshift of this number by some amount.\n","sig":null,"attributes":[{"value":"/ Performs a rightwise bitshift of this number by some amount.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":3746,"byte_end":3810,"line_start":141,"line_end":141,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":3967,"byte_end":3971,"line_start":146,"line_end":146,"column_start":8,"column_end":12},"name":"mul2","qualname":"::PrimeFieldRepr::mul2","value":"pub fn mul2(&mut Self)","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Performs a leftwise bitshift of this number, effectively multiplying\n it by 2. Overflow is ignored.\n","sig":null,"attributes":[{"value":"/ Performs a leftwise bitshift of this number, effectively multiplying","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":3849,"byte_end":3921,"line_start":144,"line_end":144,"column_start":5,"column_end":77}},{"value":"/ it by 2. Overflow is ignored.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":3926,"byte_end":3959,"line_start":145,"line_end":145,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":4060,"byte_end":4063,"line_start":149,"line_end":149,"column_start":8,"column_end":11},"name":"shl","qualname":"::PrimeFieldRepr::shl","value":"pub fn shl(&mut Self, u32)","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Performs a leftwise bitshift of this number by some amount.\n","sig":null,"attributes":[{"value":"/ Performs a leftwise bitshift of this number by some amount.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":3989,"byte_end":4052,"line_start":148,"line_end":148,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":4156,"byte_end":4164,"line_start":152,"line_end":152,"column_start":8,"column_end":16},"name":"write_be","qualname":"::PrimeFieldRepr::write_be","value":"pub fn write_be<W: Write>(&Self, W) -> io::Result<()>","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Writes this `PrimeFieldRepr` as a big endian integer.\n","sig":null,"attributes":[{"value":"/ Writes this `PrimeFieldRepr` as a big endian integer.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":4091,"byte_end":4148,"line_start":151,"line_end":151,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":4472,"byte_end":4479,"line_start":163,"line_end":163,"column_start":8,"column_end":15},"name":"read_be","qualname":"::PrimeFieldRepr::read_be","value":"pub fn read_be<R: Read>(&mut Self, R) -> io::Result<()>","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Reads a big endian integer into this representation.\n","sig":null,"attributes":[{"value":"/ Reads a big endian integer into this representation.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":4408,"byte_end":4464,"line_start":162,"line_end":162,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":4799,"byte_end":4807,"line_start":174,"line_end":174,"column_start":8,"column_end":16},"name":"write_le","qualname":"::PrimeFieldRepr::write_le","value":"pub fn write_le<W: Write>(&Self, W) -> io::Result<()>","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Writes this `PrimeFieldRepr` as a little endian integer.\n","sig":null,"attributes":[{"value":"/ Writes this `PrimeFieldRepr` as a little endian integer.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":4731,"byte_end":4791,"line_start":173,"line_end":173,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":5118,"byte_end":5125,"line_start":185,"line_end":185,"column_start":8,"column_end":15},"name":"read_le","qualname":"::PrimeFieldRepr::read_le","value":"pub fn read_le<R: Read>(&mut Self, R) -> io::Result<()>","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Reads a little endian integer into this representation.\n","sig":null,"attributes":[{"value":"/ Reads a little endian integer into this representation.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":5051,"byte_end":5110,"line_start":184,"line_end":184,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":114},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":5433,"byte_end":5437,"line_start":198,"line_end":198,"column_start":5,"column_end":9},"name":"Zero","qualname":"::LegendreSymbol::Zero","value":"LegendreSymbol::Zero","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":117},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":5447,"byte_end":5463,"line_start":199,"line_end":199,"column_start":5,"column_end":21},"name":"QuadraticResidue","qualname":"::LegendreSymbol::QuadraticResidue","value":"LegendreSymbol::QuadraticResidue","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":120},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":5473,"byte_end":5492,"line_start":200,"line_end":200,"column_start":5,"column_end":24},"name":"QuadraticNonResidue","qualname":"::LegendreSymbol::QuadraticNonResidue","value":"LegendreSymbol::QuadraticNonResidue","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":113},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":5412,"byte_end":5426,"line_start":197,"line_end":197,"column_start":10,"column_end":24},"name":"LegendreSymbol","qualname":"::LegendreSymbol","value":"pub enum LegendreSymbol {\n    Zero = ,\n    QuadraticResidue = ,\n    QuadraticNonResidue = ,\n}","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":120}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":129},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":5707,"byte_end":5717,"line_start":208,"line_end":208,"column_start":5,"column_end":15},"name":"NotInField","qualname":"::PrimeFieldDecodingError::NotInField","value":"PrimeFieldDecodingError::NotInField(String)","parent":{"krate":0,"index":128},"children":[],"decl_id":null,"docs":" The encoded value is not in the field\n","sig":null,"attributes":[{"value":"/ The encoded value is not in the field","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":5661,"byte_end":5702,"line_start":207,"line_end":207,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":128},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":5631,"byte_end":5654,"line_start":206,"line_end":206,"column_start":10,"column_end":33},"name":"PrimeFieldDecodingError","qualname":"::PrimeFieldDecodingError","value":"pub enum PrimeFieldDecodingError {\n\n    /// The encoded value is not in the field\n    NotInField(String),\n}","parent":null,"children":[{"krate":0,"index":129}],"decl_id":null,"docs":" An error that may occur when trying to interpret a `PrimeFieldRepr` as a\n `PrimeField` element.\n","sig":null,"attributes":[{"value":"/ An error that may occur when trying to interpret a `PrimeFieldRepr` as a","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":5502,"byte_end":5578,"line_start":203,"line_end":203,"column_start":1,"column_end":77}},{"value":"/ `PrimeField` element.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":5579,"byte_end":5604,"line_start":204,"line_end":204,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":77},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":6302,"byte_end":6312,"line_start":230,"line_end":230,"column_start":11,"column_end":21},"name":"PrimeField","qualname":"::PrimeField","value":"PrimeField: Field","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87}],"decl_id":null,"docs":" This represents an element of a prime field.\n","sig":null,"attributes":[{"value":"/ This represents an element of a prime field.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":6243,"byte_end":6291,"line_start":229,"line_end":229,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":78},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":6432,"byte_end":6436,"line_start":233,"line_end":233,"column_start":10,"column_end":14},"name":"Repr","qualname":"::PrimeField::Repr","value":"type Repr: PrimeFieldRepr + From<Self>;","parent":{"krate":0,"index":77},"children":[],"decl_id":null,"docs":" The prime field can be converted back and forth into this biginteger\n representation.\n","sig":null,"attributes":[{"value":"/ The prime field can be converted back and forth into this biginteger","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":6326,"byte_end":6398,"line_start":231,"line_end":231,"column_start":5,"column_end":77}},{"value":"/ representation.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":6403,"byte_end":6422,"line_start":232,"line_end":232,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":6621,"byte_end":6629,"line_start":237,"line_end":237,"column_start":8,"column_end":16},"name":"from_str","qualname":"::PrimeField::from_str","value":"pub fn from_str(&str) -> Option<Self>","parent":{"krate":0,"index":77},"children":[],"decl_id":null,"docs":" Interpret a string of numbers as a (congruent) prime field element.\n Does not accept unnecessary leading zeroes or a blank string.\n","sig":null,"attributes":[{"value":"/ Interpret a string of numbers as a (congruent) prime field element.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":6472,"byte_end":6543,"line_start":235,"line_end":235,"column_start":5,"column_end":76}},{"value":"/ Does not accept unnecessary leading zeroes or a blank string.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":6548,"byte_end":6613,"line_start":236,"line_end":236,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":7598,"byte_end":7607,"line_start":276,"line_end":276,"column_start":8,"column_end":17},"name":"from_repr","qualname":"::PrimeField::from_repr","value":"pub fn from_repr(Self::Repr) -> Result<Self, PrimeFieldDecodingError>","parent":{"krate":0,"index":77},"children":[],"decl_id":null,"docs":" Convert this prime field element into a biginteger representation.\n","sig":null,"attributes":[{"value":"/ Convert this prime field element into a biginteger representation.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":7520,"byte_end":7590,"line_start":275,"line_end":275,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":7795,"byte_end":7804,"line_start":280,"line_end":280,"column_start":8,"column_end":17},"name":"into_repr","qualname":"::PrimeField::into_repr","value":"pub fn into_repr(&Self) -> Self::Repr","parent":{"krate":0,"index":77},"children":[],"decl_id":null,"docs":" Convert a biginteger representation into a prime field element, if\n the number is an element of the field.\n","sig":null,"attributes":[{"value":"/ Convert a biginteger representation into a prime field element, if","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":7670,"byte_end":7740,"line_start":278,"line_end":278,"column_start":5,"column_end":75}},{"value":"/ the number is an element of the field.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":7745,"byte_end":7787,"line_start":279,"line_end":279,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":7890,"byte_end":7894,"line_start":283,"line_end":283,"column_start":8,"column_end":12},"name":"char","qualname":"::PrimeField::char","value":"pub fn char() -> Self::Repr","parent":{"krate":0,"index":77},"children":[],"decl_id":null,"docs":" Returns the field characteristic; the modulus.\n","sig":null,"attributes":[{"value":"/ Returns the field characteristic; the modulus.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":7832,"byte_end":7882,"line_start":282,"line_end":282,"column_start":5,"column_end":55}}]},{"kind":"Const","id":{"krate":0,"index":83},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":7995,"byte_end":8003,"line_start":286,"line_end":286,"column_start":11,"column_end":19},"name":"NUM_BITS","qualname":"::PrimeField::NUM_BITS","value":"u32","parent":{"krate":0,"index":77},"children":[],"decl_id":null,"docs":" How many bits are needed to represent an element of this field.\n","sig":null,"attributes":[{"value":"/ How many bits are needed to represent an element of this field.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":7917,"byte_end":7984,"line_start":285,"line_end":285,"column_start":5,"column_end":72}}]},{"kind":"Const","id":{"krate":0,"index":84},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":8103,"byte_end":8111,"line_start":289,"line_end":289,"column_start":11,"column_end":19},"name":"CAPACITY","qualname":"::PrimeField::CAPACITY","value":"u32","parent":{"krate":0,"index":77},"children":[],"decl_id":null,"docs":" How many bits of information can be reliably stored in the field element.\n","sig":null,"attributes":[{"value":"/ How many bits of information can be reliably stored in the field element.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":8015,"byte_end":8092,"line_start":288,"line_end":288,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":8250,"byte_end":8274,"line_start":293,"line_end":293,"column_start":8,"column_end":32},"name":"multiplicative_generator","qualname":"::PrimeField::multiplicative_generator","value":"pub fn multiplicative_generator() -> Self","parent":{"krate":0,"index":77},"children":[],"decl_id":null,"docs":" Returns the multiplicative generator of `char()` - 1 order. This element\n must also be quadratic nonresidue.\n","sig":null,"attributes":[{"value":"/ Returns the multiplicative generator of `char()` - 1 order. This element","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":8123,"byte_end":8199,"line_start":291,"line_end":291,"column_start":5,"column_end":81}},{"value":"/ must also be quadratic nonresidue.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":8204,"byte_end":8242,"line_start":292,"line_end":292,"column_start":5,"column_end":43}}]},{"kind":"Const","id":{"krate":0,"index":86},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":8340,"byte_end":8341,"line_start":296,"line_end":296,"column_start":11,"column_end":12},"name":"S","qualname":"::PrimeField::S","value":"u32","parent":{"krate":0,"index":77},"children":[],"decl_id":null,"docs":" 2^s * t = `char()` - 1 with t odd.\n","sig":null,"attributes":[{"value":"/ 2^s * t = `char()` - 1 with t odd.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":8291,"byte_end":8329,"line_start":295,"line_end":295,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":8468,"byte_end":8481,"line_start":300,"line_end":300,"column_start":8,"column_end":21},"name":"root_of_unity","qualname":"::PrimeField::root_of_unity","value":"pub fn root_of_unity() -> Self","parent":{"krate":0,"index":77},"children":[],"decl_id":null,"docs":" Returns the 2^s root of unity computed by exponentiating the `multiplicative_generator()`\n by t.\n","sig":null,"attributes":[{"value":"/ Returns the 2^s root of unity computed by exponentiating the `multiplicative_generator()`","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":8353,"byte_end":8446,"line_start":298,"line_end":298,"column_start":5,"column_end":98}},{"value":"/ by t.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":8451,"byte_end":8460,"line_start":299,"line_end":299,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":88},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":8719,"byte_end":8731,"line_start":306,"line_end":306,"column_start":11,"column_end":23},"name":"ScalarEngine","qualname":"::ScalarEngine","value":"ScalarEngine: Sized + 'static + Clone","parent":null,"children":[{"krate":0,"index":89}],"decl_id":null,"docs":" An \"engine\" is a collection of types (fields, elliptic curve groups, etc.)\n with well-defined relationships. Specific relationships (for example, a\n pairing-friendly curve) can be defined in a subtrait.\n","sig":null,"attributes":[{"value":"/ An \"engine\" is a collection of types (fields, elliptic curve groups, etc.)","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":8496,"byte_end":8574,"line_start":303,"line_end":303,"column_start":1,"column_end":79}},{"value":"/ with well-defined relationships. Specific relationships (for example, a","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":8575,"byte_end":8650,"line_start":304,"line_end":304,"column_start":1,"column_end":76}},{"value":"/ pairing-friendly curve) can be defined in a subtrait.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":8651,"byte_end":8708,"line_start":305,"line_end":305,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":89},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":8825,"byte_end":8827,"line_start":308,"line_end":308,"column_start":10,"column_end":12},"name":"Fr","qualname":"::ScalarEngine::Fr","value":"type Fr: PrimeField + SqrtField;","parent":{"krate":0,"index":88},"children":[],"decl_id":null,"docs":" This is the scalar field of the engine's groups.\n","sig":null,"attributes":[{"value":"/ This is the scalar field of the engine's groups.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":8763,"byte_end":8815,"line_start":307,"line_end":307,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":134},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":8884,"byte_end":8895,"line_start":312,"line_end":312,"column_start":12,"column_end":23},"name":"BitIterator","qualname":"::BitIterator","value":"BitIterator {  }","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":8978,"byte_end":8981,"line_start":318,"line_end":318,"column_start":12,"column_end":15},"name":"new","qualname":"<BitIterator<E>>::new","value":"pub fn new(E) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":99},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":10553,"byte_end":10556,"line_start":374,"line_end":374,"column_start":12,"column_end":15},"name":"sbb","qualname":"::arith_impl::sbb","value":"pub fn sbb(u64, u64, &mut u64) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Calculate a - b - borrow, returning the result and modifying\n the borrow value.\n","sig":null,"attributes":[{"value":"/ Calculate a - b - borrow, returning the result and modifying","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":10429,"byte_end":10493,"line_start":371,"line_end":371,"column_start":5,"column_end":69}},{"value":"/ the borrow value.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":10498,"byte_end":10519,"line_start":372,"line_end":372,"column_start":5,"column_end":26}},{"value":"inline(always)","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":10524,"byte_end":10541,"line_start":373,"line_end":373,"column_start":5,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":100},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":10892,"byte_end":10895,"line_start":385,"line_end":385,"column_start":12,"column_end":15},"name":"adc","qualname":"::arith_impl::adc","value":"pub fn adc(u64, u64, &mut u64) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Calculate a + b + carry, returning the sum and modifying the\n carry value.\n","sig":null,"attributes":[{"value":"/ Calculate a + b + carry, returning the sum and modifying the","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":10773,"byte_end":10837,"line_start":382,"line_end":382,"column_start":5,"column_end":69}},{"value":"/ carry value.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":10842,"byte_end":10858,"line_start":383,"line_end":383,"column_start":5,"column_end":21}},{"value":"inline(always)","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":10863,"byte_end":10880,"line_start":384,"line_end":384,"column_start":5,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":101},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":11240,"byte_end":11254,"line_start":396,"line_end":396,"column_start":12,"column_end":26},"name":"mac_with_carry","qualname":"::arith_impl::mac_with_carry","value":"pub fn mac_with_carry(u64, u64, u64, &mut u64) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Calculate a + (b * c) + carry, returning the least significant digit\n and setting carry to the most significant digit.\n","sig":null,"attributes":[{"value":"/ Calculate a + (b * c) + carry, returning the least significant digit","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":11077,"byte_end":11149,"line_start":393,"line_end":393,"column_start":5,"column_end":77}},{"value":"/ and setting carry to the most significant digit.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":11154,"byte_end":11206,"line_start":394,"line_end":394,"column_start":5,"column_end":57}},{"value":"inline(always)","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":11211,"byte_end":11228,"line_start":395,"line_end":395,"column_start":5,"column_end":22}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":5745,"byte_end":5768,"line_start":211,"line_end":211,"column_start":16,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":5956,"byte_end":5979,"line_start":219,"line_end":219,"column_start":23,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":8950,"byte_end":8961,"line_start":317,"line_end":317,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":9111,"byte_end":9122,"line_start":325,"line_end":325,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":561,"byte_end":566,"line_start":27,"line_end":27,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":569,"byte_end":571,"line_start":27,"line_end":27,"column_start":13,"column_end":15},"kind":"SuperTrait","from":{"krate":2,"index":1795},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":574,"byte_end":578,"line_start":27,"line_end":27,"column_start":18,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":2081},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":581,"byte_end":586,"line_start":27,"line_end":27,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1762},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":589,"byte_end":593,"line_start":27,"line_end":27,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":596,"byte_end":600,"line_start":27,"line_end":27,"column_start":40,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":608,"byte_end":613,"line_start":27,"line_end":27,"column_start":52,"column_end":57},"kind":"SuperTrait","from":{"krate":2,"index":6831},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":621,"byte_end":628,"line_start":27,"line_end":27,"column_start":65,"column_end":72},"kind":"SuperTrait","from":{"krate":2,"index":6836},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":2401,"byte_end":2406,"line_start":90,"line_end":90,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":0,"index":23},"to":{"krate":0,"index":39}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":2878,"byte_end":2883,"line_start":103,"line_end":103,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":2890,"byte_end":2894,"line_start":104,"line_end":104,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2081},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":2901,"byte_end":2906,"line_start":105,"line_end":105,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":1762},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":2913,"byte_end":2915,"line_start":106,"line_end":106,"column_start":7,"column_end":9},"kind":"SuperTrait","from":{"krate":2,"index":1795},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":2922,"byte_end":2925,"line_start":107,"line_end":107,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":1822},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":2932,"byte_end":2936,"line_start":108,"line_end":108,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":2943,"byte_end":2947,"line_start":109,"line_end":109,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":2954,"byte_end":2961,"line_start":110,"line_end":110,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":2,"index":2059},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":2973,"byte_end":2978,"line_start":111,"line_end":111,"column_start":12,"column_end":17},"kind":"SuperTrait","from":{"krate":2,"index":6831},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":2990,"byte_end":2997,"line_start":112,"line_end":112,"column_start":12,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":6836},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":3018,"byte_end":3023,"line_start":114,"line_end":114,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":1980},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":3037,"byte_end":3042,"line_start":115,"line_end":115,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":1983},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":3056,"byte_end":3060,"line_start":116,"line_end":116,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":1989},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":5745,"byte_end":5768,"line_start":211,"line_end":211,"column_start":16,"column_end":39},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":128},"to":{"krate":1,"index":1724}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":5956,"byte_end":5979,"line_start":219,"line_end":219,"column_start":23,"column_end":46},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":128},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":6314,"byte_end":6319,"line_start":230,"line_end":230,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":23},"to":{"krate":0,"index":77}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":8733,"byte_end":8738,"line_start":306,"line_end":306,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":88}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":8751,"byte_end":8756,"line_start":306,"line_end":306,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":1762},"to":{"krate":0,"index":88}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":8950,"byte_end":8961,"line_start":317,"line_end":317,"column_start":23,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":134},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/fff-0.2.3/src/lib.rs","byte_start":9111,"byte_end":9122,"line_start":325,"line_end":325,"column_start":36,"column_end":47},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":134},"to":{"krate":2,"index":5536}}]}