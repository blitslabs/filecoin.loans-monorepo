{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3","program":"/home/tardigrade/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","integer_encoding","--edition=2018","/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=cce73efd6e338525","-C","extra-filename=-cce73efd6e338525","--out-dir","/home/tardigrade/filecoin/filecoin_loans_test/filecoin-signing-tools/extras/target/rls/debug/deps","-L","dependency=/home/tardigrade/filecoin/filecoin_loans_test/filecoin-signing-tools/extras/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/tardigrade/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/tardigrade/filecoin/filecoin_loans_test/filecoin-signing-tools/extras/target/rls/debug/deps/libinteger_encoding-cce73efd6e338525.rmeta"},"prelude":{"crate_id":{"name":"integer_encoding","disambiguator":[9387583524555118267,12383543758770765125]},"crate_root":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src","external_crates":[{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12933703438800314702,5774803219644544316]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18134888982608726624,15478788479473023395]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6673302632599048863,4691371433878452070]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11457885127507258025,479752930606968628]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6007655421670680970,17748288058820543149]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4051320655186846034,14773827427477085591]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3672675044024306215,7179779047398453100]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14739525726177289408,3061276640434149652]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2246841610299105657,12905561680815043912]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4036557704906104068,994131407893854156]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7443407023664770875,11250036483448109314]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[10148669557414888454,6400214184476534778]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4006540472161665961,15205760237192158299]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[16043199729901662453,7825522302763349882]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[5738570549504868290,14845130516100231771]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[6807687926185025542,9498922200428406688]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6171827839412267364,4338689175470013405]}}],"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","byte_start":0,"byte_end":1584,"line_start":1,"line_end":50,"column_start":1,"column_end":30}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":5},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","byte_start":1025,"byte_end":1033,"line_start":35,"line_end":35,"column_start":16,"column_end":24},"alias_span":null,"name":"FixedInt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":21},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","byte_start":1051,"byte_end":1057,"line_start":36,"line_end":36,"column_start":17,"column_end":23},"alias_span":null,"name":"VarInt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":61},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","byte_start":1177,"byte_end":1191,"line_start":40,"line_end":40,"column_start":17,"column_end":31},"alias_span":null,"name":"FixedIntReader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":47},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","byte_start":1308,"byte_end":1320,"line_start":43,"line_end":43,"column_start":17,"column_end":29},"alias_span":null,"name":"VarIntReader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":83},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","byte_start":1440,"byte_end":1454,"line_start":47,"line_end":47,"column_start":17,"column_end":31},"alias_span":null,"name":"FixedIntWriter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":75},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","byte_start":1571,"byte_end":1583,"line_start":50,"line_end":50,"column_start":17,"column_end":29},"alias_span":null,"name":"VarIntWriter","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","byte_start":0,"byte_end":1584,"line_start":1,"line_end":50,"column_start":1,"column_end":30},"name":"","qualname":"::","value":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":69},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96}],"decl_id":null,"docs":" Fast serialization of integers.","sig":null,"attributes":[{"value":"/ Fast serialization of integers.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","byte_start":0,"byte_end":35,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate implements encoding and decoding of integer types to and from `FixedInt` (i.e. a","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","byte_start":40,"byte_end":135,"line_start":3,"line_end":3,"column_start":1,"column_end":96}},{"value":"/ representation of integers similar or equal to how they are stored in memory) as well as","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","byte_start":136,"byte_end":228,"line_start":4,"line_end":4,"column_start":1,"column_end":93}},{"value":"/ `VarInt` (encoding integers so that they only use as much memory as needed to represent their","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","byte_start":229,"byte_end":326,"line_start":5,"line_end":5,"column_start":1,"column_end":98}},{"value":"/ magnitude).","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","byte_start":327,"byte_end":342,"line_start":6,"line_end":6,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","byte_start":343,"byte_end":346,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is useful when (de)serializing data from and to binary representations. For example,","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","byte_start":347,"byte_end":440,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ Protocol Buffers (by Google) use these kinds of encoding.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","byte_start":441,"byte_end":502,"line_start":9,"line_end":9,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","byte_start":503,"byte_end":506,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","byte_start":507,"byte_end":514,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use integer_encoding::*;","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","byte_start":515,"byte_end":543,"line_start":12,"line_end":12,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","byte_start":544,"byte_end":547,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","byte_start":548,"byte_end":563,"line_start":14,"line_end":14,"column_start":1,"column_end":16}},{"value":"/     let a: u32 = 344;","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","byte_start":564,"byte_end":589,"line_start":15,"line_end":15,"column_start":1,"column_end":26}},{"value":"/     let encoded_byte_slice = a.encode_fixed_light();","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","byte_start":590,"byte_end":646,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/     assert_eq!(a, u32::decode_fixed(encoded_byte_slice));","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","byte_start":647,"byte_end":708,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/     assert_eq!(4, encoded_byte_slice.len());","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","byte_start":709,"byte_end":757,"line_start":18,"line_end":18,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","byte_start":758,"byte_end":761,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/     let b: i32 = -111;","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","byte_start":762,"byte_end":788,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/     let encoded_byte_vec = b.encode_var_vec();","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","byte_start":789,"byte_end":839,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/     assert_eq!(Some((b, 2)), i32::decode_var(&encoded_byte_vec));","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","byte_start":840,"byte_end":909,"line_start":22,"line_end":22,"column_start":1,"column_end":70}},{"value":"/ }","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","byte_start":910,"byte_end":915,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/lib.rs","byte_start":916,"byte_end":923,"line_start":24,"line_end":24,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":5},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/fixed.rs","byte_start":1791,"byte_end":1799,"line_start":6,"line_end":6,"column_start":11,"column_end":19},"name":"FixedInt","qualname":"::fixed::FixedInt","value":"FixedInt: Sized + Copy","parent":null,"children":[{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":13}],"decl_id":null,"docs":" `FixedInt` provides encoding/decoding to and from fixed int representations.","sig":null,"attributes":[{"value":"/ `FixedInt` provides encoding/decoding to and from fixed int representations.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/fixed.rs","byte_start":1612,"byte_end":1692,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/fixed.rs","byte_start":1693,"byte_end":1696,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The emitted bytestring contains the bytes of the integer in machine endianness.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/fixed.rs","byte_start":1697,"byte_end":1780,"line_start":5,"line_end":5,"column_start":1,"column_end":84}}]},{"kind":"Const","id":{"krate":0,"index":6},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/fixed.rs","byte_start":1826,"byte_end":1840,"line_start":7,"line_end":7,"column_start":11,"column_end":25},"name":"REQUIRED_SPACE","qualname":"::fixed::FixedInt::REQUIRED_SPACE","value":"usize","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/fixed.rs","byte_start":1929,"byte_end":1943,"line_start":9,"line_end":9,"column_start":8,"column_end":22},"name":"required_space","qualname":"::fixed::FixedInt::required_space","value":"pub fn required_space() -> usize","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":" Returns how many bytes are required to represent the given type.\n","sig":null,"attributes":[{"value":"/ Returns how many bytes are required to represent the given type.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/fixed.rs","byte_start":1853,"byte_end":1921,"line_start":8,"line_end":8,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":8},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/fixed.rs","byte_start":2054,"byte_end":2066,"line_start":11,"line_end":11,"column_start":8,"column_end":20},"name":"encode_fixed","qualname":"::fixed::FixedInt::encode_fixed","value":"pub fn encode_fixed(Self, &mut [u8])","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":" Encode a value into the given slice. `dst` must be exactly `REQUIRED_SPACE` bytes.\n","sig":null,"attributes":[{"value":"/ Encode a value into the given slice. `dst` must be exactly `REQUIRED_SPACE` bytes.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/fixed.rs","byte_start":1960,"byte_end":2046,"line_start":10,"line_end":10,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":9},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/fixed.rs","byte_start":2188,"byte_end":2200,"line_start":13,"line_end":13,"column_start":8,"column_end":20},"name":"decode_fixed","qualname":"::fixed::FixedInt::decode_fixed","value":"pub fn decode_fixed(&[u8]) -> Self","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":" Decode a value from the given slice. `src` must be exactly `REQUIRED_SPACE` bytes.\n","sig":null,"attributes":[{"value":"/ Decode a value from the given slice. `src` must be exactly `REQUIRED_SPACE` bytes.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/fixed.rs","byte_start":2094,"byte_end":2180,"line_start":12,"line_end":12,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/fixed.rs","byte_start":2354,"byte_end":2372,"line_start":16,"line_end":16,"column_start":8,"column_end":26},"name":"encode_fixed_light","qualname":"::fixed::FixedInt::encode_fixed_light","value":"pub fn encode_fixed_light<'a>(&'a Self) -> &'a [u8]","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":" Perform a transmute, i.e. return a \"view\" into the integer's memory, which is faster than\n performing a copy.\n","sig":null,"attributes":[{"value":"/ Perform a transmute, i.e. return a \"view\" into the integer's memory, which is faster than","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/fixed.rs","byte_start":2226,"byte_end":2319,"line_start":14,"line_end":14,"column_start":5,"column_end":98}},{"value":"/ performing a copy.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/fixed.rs","byte_start":2324,"byte_end":2346,"line_start":15,"line_end":15,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/fixed.rs","byte_start":2459,"byte_end":2475,"line_start":19,"line_end":19,"column_start":8,"column_end":24},"name":"encode_fixed_vec","qualname":"::fixed::FixedInt::encode_fixed_vec","value":"pub fn encode_fixed_vec(Self) -> Vec<u8>","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":" Helper: Encode the value and return a Vec.\n","sig":null,"attributes":[{"value":"/ Helper: Encode the value and return a Vec.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/fixed.rs","byte_start":2405,"byte_end":2451,"line_start":18,"line_end":18,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":13},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/fixed.rs","byte_start":2681,"byte_end":2697,"line_start":26,"line_end":26,"column_start":8,"column_end":24},"name":"decode_fixed_vec","qualname":"::fixed::FixedInt::decode_fixed_vec","value":"pub fn decode_fixed_vec(&Vec<u8>) -> Self","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":" Helper: Decode the value from the Vec.\n","sig":null,"attributes":[{"value":"/ Helper: Decode the value from the Vec.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/fixed.rs","byte_start":2631,"byte_end":2673,"line_start":25,"line_end":25,"column_start":5,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":21},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/varint.rs","byte_start":9456,"byte_end":9462,"line_start":32,"line_end":32,"column_start":11,"column_end":17},"name":"VarInt","qualname":"::varint::VarInt","value":"VarInt: Sized + Copy","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25}],"decl_id":null,"docs":" Varint (variable length integer) encoding, as described in\n https://developers.google.com/protocol-buffers/docs/encoding.","sig":null,"attributes":[{"value":"/ Varint (variable length integer) encoding, as described in","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/varint.rs","byte_start":9230,"byte_end":9292,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/ https://developers.google.com/protocol-buffers/docs/encoding.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/varint.rs","byte_start":9293,"byte_end":9358,"line_start":29,"line_end":29,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/varint.rs","byte_start":9359,"byte_end":9362,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Uses zigzag encoding (also described there) for signed integer representation.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/varint.rs","byte_start":9363,"byte_end":9445,"line_start":31,"line_end":31,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/varint.rs","byte_start":9638,"byte_end":9652,"line_start":35,"line_end":35,"column_start":8,"column_end":22},"name":"required_space","qualname":"::varint::VarInt::required_space","value":"pub fn required_space(Self) -> usize","parent":{"krate":0,"index":21},"children":[],"decl_id":null,"docs":" Returns the number of bytes this number needs in its encoded form. Note: This varies\n depending on the actual number you want to encode.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes this number needs in its encoded form. Note: This varies","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/varint.rs","byte_start":9483,"byte_end":9571,"line_start":33,"line_end":33,"column_start":5,"column_end":93}},{"value":"/ depending on the actual number you want to encode.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/varint.rs","byte_start":9576,"byte_end":9630,"line_start":34,"line_end":34,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/varint.rs","byte_start":9897,"byte_end":9907,"line_start":39,"line_end":39,"column_start":8,"column_end":18},"name":"decode_var","qualname":"::varint::VarInt::decode_var","value":"pub fn decode_var(&[u8]) -> Option<(Self, usize)>","parent":{"krate":0,"index":21},"children":[],"decl_id":null,"docs":" Decode a value from the slice. Returns the value and the number of bytes read from the\n slice (can be used to read several consecutive values from a big slice)\n return None if all bytes has MSB set.\n","sig":null,"attributes":[{"value":"/ Decode a value from the slice. Returns the value and the number of bytes read from the","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/varint.rs","byte_start":9673,"byte_end":9763,"line_start":36,"line_end":36,"column_start":5,"column_end":95}},{"value":"/ slice (can be used to read several consecutive values from a big slice)","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/varint.rs","byte_start":9768,"byte_end":9843,"line_start":37,"line_end":37,"column_start":5,"column_end":80}},{"value":"/ return None if all bytes has MSB set.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/varint.rs","byte_start":9848,"byte_end":9889,"line_start":38,"line_end":38,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/varint.rs","byte_start":10120,"byte_end":10130,"line_start":42,"line_end":42,"column_start":8,"column_end":18},"name":"encode_var","qualname":"::varint::VarInt::encode_var","value":"pub fn encode_var(Self, &mut [u8]) -> usize","parent":{"krate":0,"index":21},"children":[],"decl_id":null,"docs":" Encode a value into the slice. The slice must be at least `required_space()` bytes long.\n The number of bytes taken by the encoded integer is returned.\n","sig":null,"attributes":[{"value":"/ Encode a value into the slice. The slice must be at least `required_space()` bytes long.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/varint.rs","byte_start":9950,"byte_end":10042,"line_start":40,"line_end":40,"column_start":5,"column_end":97}},{"value":"/ The number of bytes taken by the encoded integer is returned.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/varint.rs","byte_start":10047,"byte_end":10112,"line_start":41,"line_end":41,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/varint.rs","byte_start":10302,"byte_end":10316,"line_start":46,"line_end":46,"column_start":8,"column_end":22},"name":"encode_var_vec","qualname":"::varint::VarInt::encode_var_vec","value":"pub fn encode_var_vec(Self) -> Vec<u8>","parent":{"krate":0,"index":21},"children":[],"decl_id":null,"docs":" Helper: Encode a value and return the encoded form as Vec. The Vec must be at least\n `required_space()` bytes long.\n","sig":null,"attributes":[{"value":"/ Helper: Encode a value and return the encoded form as Vec. The Vec must be at least","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/varint.rs","byte_start":10168,"byte_end":10255,"line_start":44,"line_end":44,"column_start":5,"column_end":92}},{"value":"/ `required_space()` bytes long.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/varint.rs","byte_start":10260,"byte_end":10294,"line_start":45,"line_end":45,"column_start":5,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":47},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/reader.rs","byte_start":20867,"byte_end":20879,"line_start":16,"line_end":16,"column_start":11,"column_end":23},"name":"VarIntReader","qualname":"::reader::VarIntReader","value":"VarIntReader","parent":null,"children":[{"krate":0,"index":48}],"decl_id":null,"docs":" A trait for reading VarInts from any other `Reader`.","sig":null,"attributes":[{"value":"/ A trait for reading VarInts from any other `Reader`.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/reader.rs","byte_start":20716,"byte_end":20772,"line_start":13,"line_end":13,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/reader.rs","byte_start":20773,"byte_end":20776,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ It's recommended to use a buffered reader, as many small reads will happen.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/reader.rs","byte_start":20777,"byte_end":20856,"line_start":15,"line_end":15,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/reader.rs","byte_start":21205,"byte_end":21216,"line_start":23,"line_end":23,"column_start":8,"column_end":19},"name":"read_varint","qualname":"::reader::VarIntReader::read_varint","value":"pub fn read_varint<VI: VarInt>(&mut Self) -> Result<VI>","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":" Returns either the decoded integer, or an error.","sig":null,"attributes":[{"value":"/ Returns either the decoded integer, or an error.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/reader.rs","byte_start":20886,"byte_end":20938,"line_start":17,"line_end":17,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/reader.rs","byte_start":20943,"byte_end":20946,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ In general, this always reads a whole varint. If the encoded varint's value is bigger","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/reader.rs","byte_start":20951,"byte_end":21040,"line_start":19,"line_end":19,"column_start":5,"column_end":94}},{"value":"/ than the valid value range of `VI`, then the value is truncated.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/reader.rs","byte_start":21045,"byte_end":21113,"line_start":20,"line_end":20,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/reader.rs","byte_start":21118,"byte_end":21121,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ On EOF, an io::Error with io::ErrorKind::UnexpectedEof is returned.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/reader.rs","byte_start":21126,"byte_end":21197,"line_start":22,"line_end":22,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":61},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/reader.rs","byte_start":23662,"byte_end":23676,"line_start":111,"line_end":111,"column_start":11,"column_end":25},"name":"FixedIntReader","qualname":"::reader::FixedIntReader","value":"FixedIntReader","parent":null,"children":[{"krate":0,"index":62}],"decl_id":null,"docs":" A trait for reading FixedInts from any other `Reader`.\n","sig":null,"attributes":[{"value":"/ A trait for reading FixedInts from any other `Reader`.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/reader.rs","byte_start":23593,"byte_end":23651,"line_start":110,"line_end":110,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/reader.rs","byte_start":23855,"byte_end":23868,"line_start":115,"line_end":115,"column_start":8,"column_end":21},"name":"read_fixedint","qualname":"::reader::FixedIntReader::read_fixedint","value":"pub fn read_fixedint<FI: FixedInt>(&mut Self) -> Result<FI>","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":" Read a fixed integer from a reader. How many bytes are read depends on `FI`.","sig":null,"attributes":[{"value":"/ Read a fixed integer from a reader. How many bytes are read depends on `FI`.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/reader.rs","byte_start":23683,"byte_end":23763,"line_start":112,"line_end":112,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/reader.rs","byte_start":23768,"byte_end":23771,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ On EOF, an io::Error with io::ErrorKind::UnexpectedEof is returned.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/reader.rs","byte_start":23776,"byte_end":23847,"line_start":114,"line_end":114,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":75},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/writer.rs","byte_start":25214,"byte_end":25226,"line_start":14,"line_end":14,"column_start":11,"column_end":23},"name":"VarIntWriter","qualname":"::writer::VarIntWriter","value":"VarIntWriter","parent":null,"children":[{"krate":0,"index":76}],"decl_id":null,"docs":" A trait for writing integers in VarInt encoding to any `Write` type. This packs encoding and\n writing into one step.\n","sig":null,"attributes":[{"value":"/ A trait for writing integers in VarInt encoding to any `Write` type. This packs encoding and","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/writer.rs","byte_start":25080,"byte_end":25176,"line_start":12,"line_end":12,"column_start":1,"column_end":97}},{"value":"/ writing into one step.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/writer.rs","byte_start":25177,"byte_end":25203,"line_start":13,"line_end":13,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/writer.rs","byte_start":25236,"byte_end":25248,"line_start":15,"line_end":15,"column_start":8,"column_end":20},"name":"write_varint","qualname":"::writer::VarIntWriter::write_varint","value":"pub fn write_varint<VI: VarInt>(&mut Self, VI) -> Result<usize>","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":83},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/writer.rs","byte_start":26360,"byte_end":26374,"line_start":48,"line_end":48,"column_start":11,"column_end":25},"name":"FixedIntWriter","qualname":"::writer::FixedIntWriter","value":"FixedIntWriter","parent":null,"children":[{"krate":0,"index":84}],"decl_id":null,"docs":" A trait for writing integers without encoding (i.e. `FixedInt`) to any `Write` type.\n","sig":null,"attributes":[{"value":"/ A trait for writing integers without encoding (i.e. `FixedInt`) to any `Write` type.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/writer.rs","byte_start":26261,"byte_end":26349,"line_start":47,"line_end":47,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/writer.rs","byte_start":26384,"byte_end":26398,"line_start":49,"line_end":49,"column_start":8,"column_end":22},"name":"write_fixedint","qualname":"::writer::FixedIntWriter::write_fixedint","value":"pub fn write_fixedint<FI: FixedInt>(&mut Self, FI) -> Result<usize>","parent":{"krate":0,"index":83},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":18,"kind":"Inherent","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/reader.rs","byte_start":21667,"byte_end":21682,"line_start":40,"line_end":40,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/reader.rs","byte_start":22988,"byte_end":22989,"line_start":86,"line_end":86,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/reader.rs","byte_start":24594,"byte_end":24595,"line_start":135,"line_end":135,"column_start":34,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/writer.rs","byte_start":26033,"byte_end":26038,"line_start":37,"line_end":37,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/writer.rs","byte_start":27150,"byte_end":27151,"line_start":69,"line_end":69,"column_start":35,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/fixed.rs","byte_start":1801,"byte_end":1806,"line_start":6,"line_end":6,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":5}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/fixed.rs","byte_start":1809,"byte_end":1813,"line_start":6,"line_end":6,"column_start":29,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":2081},"to":{"krate":0,"index":5}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/varint.rs","byte_start":9464,"byte_end":9469,"line_start":32,"line_end":32,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":21}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/varint.rs","byte_start":9472,"byte_end":9476,"line_start":32,"line_end":32,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2081},"to":{"krate":0,"index":21}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/reader.rs","byte_start":21667,"byte_end":21682,"line_start":40,"line_end":40,"column_start":6,"column_end":21},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":193},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/reader.rs","byte_start":22988,"byte_end":22989,"line_start":86,"line_end":86,"column_start":32,"column_end":33},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":56},"to":{"krate":0,"index":47}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/reader.rs","byte_start":24594,"byte_end":24595,"line_start":135,"line_end":135,"column_start":34,"column_end":35},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":65},"to":{"krate":0,"index":61}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/writer.rs","byte_start":26033,"byte_end":26038,"line_start":37,"line_end":37,"column_start":37,"column_end":42},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":79},"to":{"krate":0,"index":75}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/integer-encoding-2.1.3/src/writer.rs","byte_start":27150,"byte_end":27151,"line_start":69,"line_end":69,"column_start":35,"column_end":36},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":87},"to":{"krate":0,"index":83}}]}