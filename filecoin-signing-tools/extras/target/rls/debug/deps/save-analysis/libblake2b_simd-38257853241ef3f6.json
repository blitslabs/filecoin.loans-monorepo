{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11","program":"/home/tardigrade/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","blake2b_simd","--edition=2018","/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=38257853241ef3f6","-C","extra-filename=-38257853241ef3f6","--out-dir","/home/tardigrade/filecoin/filecoin_loans_test/filecoin-signing-tools/extras/target/rls/debug/deps","-L","dependency=/home/tardigrade/filecoin/filecoin_loans_test/filecoin-signing-tools/extras/target/rls/debug/deps","--extern","arrayref=/home/tardigrade/filecoin/filecoin_loans_test/filecoin-signing-tools/extras/target/rls/debug/deps/libarrayref-1efc1fb86f924f0c.rmeta","--extern","arrayvec=/home/tardigrade/filecoin/filecoin_loans_test/filecoin-signing-tools/extras/target/rls/debug/deps/libarrayvec-0528f34a0f2a123b.rmeta","--extern","constant_time_eq=/home/tardigrade/filecoin/filecoin_loans_test/filecoin-signing-tools/extras/target/rls/debug/deps/libconstant_time_eq-ac9a535f7ddd0464.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/tardigrade/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/tardigrade/filecoin/filecoin_loans_test/filecoin-signing-tools/extras/target/rls/debug/deps/libblake2b_simd-38257853241ef3f6.rmeta"},"prelude":{"crate_id":{"name":"blake2b_simd","disambiguator":[7753542993714665424,17753475741886034183]},"crate_root":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src","external_crates":[{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12933703438800314702,5774803219644544316]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18134888982608726624,15478788479473023395]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6673302632599048863,4691371433878452070]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11457885127507258025,479752930606968628]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6007655421670680970,17748288058820543149]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4051320655186846034,14773827427477085591]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3672675044024306215,7179779047398453100]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14739525726177289408,3061276640434149652]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2246841610299105657,12905561680815043912]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4036557704906104068,994131407893854156]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7443407023664770875,11250036483448109314]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[10148669557414888454,6400214184476534778]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4006540472161665961,15205760237192158299]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[16043199729901662453,7825522302763349882]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[5738570549504868290,14845130516100231771]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[6807687926185025542,9498922200428406688]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6171827839412267364,4338689175470013405]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","num":18,"id":{"name":"arrayref","disambiguator":[16818885780591367818,9624370045344091841]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","num":19,"id":{"name":"arrayvec","disambiguator":[17792507219208215200,7619361430451051941]}},{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","num":20,"id":{"name":"constant_time_eq","disambiguator":[11542931171304914434,3999952699895281030]}}],"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":0,"byte_end":22863,"line_start":1,"line_end":674,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":0,"byte_end":22863,"line_start":1,"line_end":674,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":110},{"krate":0,"index":136},{"krate":0,"index":215},{"krate":0,"index":280},{"krate":0,"index":324},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":741},{"krate":0,"index":758},{"krate":0,"index":391},{"krate":0,"index":414},{"krate":0,"index":416},{"krate":0,"index":774},{"krate":0,"index":785},{"krate":0,"index":418},{"krate":0,"index":428},{"krate":0,"index":433},{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":440},{"krate":0,"index":806},{"krate":0,"index":811},{"krate":0,"index":810},{"krate":0,"index":442},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":450},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":455},{"krate":0,"index":457}],"decl_id":null,"docs":" [![GitHub](https://img.shields.io/github/tag/oconnor663/blake2_simd.svg?label=GitHub)](https://github.com/oconnor663/blake2_simd) [![crates.io](https://img.shields.io/crates/v/blake2b_simd.svg)](https://crates.io/crates/blake2b_simd) [![Actions Status](https://github.com/oconnor663/blake2_simd/workflows/tests/badge.svg)](https://github.com/oconnor663/blake2_simd/actions)","sig":null,"attributes":[{"value":"/ [![GitHub](https://img.shields.io/github/tag/oconnor663/blake2_simd.svg?label=GitHub)](https://github.com/oconnor663/blake2_simd) [![crates.io](https://img.shields.io/crates/v/blake2b_simd.svg)](https://crates.io/crates/blake2b_simd) [![Actions Status](https://github.com/oconnor663/blake2_simd/workflows/tests/badge.svg)](https://github.com/oconnor663/blake2_simd/actions)","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":0,"byte_end":377,"line_start":1,"line_end":1,"column_start":1,"column_end":378}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":378,"byte_end":381,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ An implementation of the BLAKE2b and BLAKE2bp hash functions. See also","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":382,"byte_end":456,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ [`blake2s_simd`](https://docs.rs/blake2s_simd).","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":457,"byte_end":508,"line_start":4,"line_end":4,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":509,"byte_end":512,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This crate includes:","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":513,"byte_end":537,"line_start":6,"line_end":6,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":538,"byte_end":541,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ - 100% stable Rust.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":542,"byte_end":565,"line_start":8,"line_end":8,"column_start":1,"column_end":24}},{"value":"/ - SIMD implementations based on Samuel Neves' [`blake2-avx2`](https://github.com/sneves/blake2-avx2).","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":566,"byte_end":671,"line_start":9,"line_end":9,"column_start":1,"column_end":106}},{"value":"/   These are very fast. For benchmarks, see [the Performance section of the","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":672,"byte_end":750,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/   README](https://github.com/oconnor663/blake2_simd#performance).","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":751,"byte_end":820,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ - Portable, safe implementations for other platforms.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":821,"byte_end":878,"line_start":12,"line_end":12,"column_start":1,"column_end":58}},{"value":"/ - Dynamic CPU feature detection. Binaries include multiple implementations by default and","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":879,"byte_end":972,"line_start":13,"line_end":13,"column_start":1,"column_end":94}},{"value":"/   choose the fastest one the processor supports at runtime.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":973,"byte_end":1036,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/ - All the features from the [the BLAKE2 spec](https://blake2.net/blake2.pdf), like adjustable","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":1037,"byte_end":1134,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/   length, keying, and associated data for tree hashing.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":1135,"byte_end":1194,"line_start":16,"line_end":16,"column_start":1,"column_end":60}},{"value":"/ - `no_std` support. The `std` Cargo feature is on by default, for CPU feature detection and","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":1195,"byte_end":1290,"line_start":17,"line_end":17,"column_start":1,"column_end":96}},{"value":"/   for implementing `std::io::Write`.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":1291,"byte_end":1331,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/ - Support for computing multiple BLAKE2b hashes in parallel, matching the efficiency of","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":1332,"byte_end":1423,"line_start":19,"line_end":19,"column_start":1,"column_end":92}},{"value":"/   BLAKE2bp. See the [`many`](many/index.html) module.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":1424,"byte_end":1481,"line_start":20,"line_end":20,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":1482,"byte_end":1485,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":1486,"byte_end":1499,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":1500,"byte_end":1503,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":1504,"byte_end":1511,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use blake2b_simd::{blake2b, Params};","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":1512,"byte_end":1552,"line_start":25,"line_end":25,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":1553,"byte_end":1556,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let expected = \"ca002330e69d3e6b84a46a56a6533fd79d51d97a3bb7cad6c2ff43b354185d6d\\","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":1557,"byte_end":1642,"line_start":27,"line_end":27,"column_start":1,"column_end":86}},{"value":"/                 c1e723fb3db4ae0737e120378424c714bb982d9dc5bbd7a0ab318240ddd18f8d\";","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":1643,"byte_end":1729,"line_start":28,"line_end":28,"column_start":1,"column_end":87}},{"value":"/ let hash = blake2b(b\"foo\");","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":1730,"byte_end":1761,"line_start":29,"line_end":29,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(expected, &hash.to_hex());","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":1762,"byte_end":1803,"line_start":30,"line_end":30,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":1804,"byte_end":1807,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let hash = Params::new()","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":1808,"byte_end":1836,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/     .hash_length(16)","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":1837,"byte_end":1861,"line_start":33,"line_end":33,"column_start":1,"column_end":25}},{"value":"/     .key(b\"The Magic Words are Squeamish Ossifrage\")","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":1862,"byte_end":1918,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/     .personal(b\"L. P. Waterhouse\")","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":1919,"byte_end":1957,"line_start":35,"line_end":35,"column_start":1,"column_end":39}},{"value":"/     .to_state()","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":1958,"byte_end":1977,"line_start":36,"line_end":36,"column_start":1,"column_end":20}},{"value":"/     .update(b\"foo\")","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":1978,"byte_end":2001,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/     .update(b\"bar\")","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":2002,"byte_end":2025,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/     .update(b\"baz\")","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":2026,"byte_end":2049,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"/     .finalize();","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":2050,"byte_end":2070,"line_start":40,"line_end":40,"column_start":1,"column_end":21}},{"value":"/ assert_eq!(\"ee8ff4e9be887297cf79348dc35dab56\", &hash.to_hex());","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":2071,"byte_end":2138,"line_start":41,"line_end":41,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":2139,"byte_end":2146,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":215},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"blake2bp","qualname":"::blake2bp","value":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":637},{"krate":0,"index":643},{"krate":0,"index":235},{"krate":0,"index":249},{"krate":0,"index":251},{"krate":0,"index":645},{"krate":0,"index":658},{"krate":0,"index":253},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":271},{"krate":0,"index":273},{"krate":0,"index":279}],"decl_id":null,"docs":" BLAKE2bp, a variant of BLAKE2b that uses SIMD more efficiently.","sig":null,"attributes":[{"value":"/ BLAKE2bp, a variant of BLAKE2b that uses SIMD more efficiently.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":77003,"byte_end":77070,"line_start":1,"line_end":1,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":77071,"byte_end":77074,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The AVX2 implementation of BLAKE2bp is about twice as fast that of BLAKE2b.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":77075,"byte_end":77154,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ However, note that it's a different hash function, and it gives a different","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":77155,"byte_end":77234,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ hash from BLAKE2b for the same input.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":77235,"byte_end":77276,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":77277,"byte_end":77280,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":77281,"byte_end":77294,"line_start":7,"line_end":7,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":77295,"byte_end":77298,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":77299,"byte_end":77306,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ use blake2b_simd::blake2bp;","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":77307,"byte_end":77338,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":77339,"byte_end":77342,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ let hash = blake2bp::Params::new()","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":77343,"byte_end":77381,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/     .hash_length(16)","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":77382,"byte_end":77406,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/     .key(b\"The Magic Words are Squeamish Ossifrage\")","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":77407,"byte_end":77463,"line_start":14,"line_end":14,"column_start":1,"column_end":57}},{"value":"/     .to_state()","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":77464,"byte_end":77483,"line_start":15,"line_end":15,"column_start":1,"column_end":20}},{"value":"/     .update(b\"foo\")","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":77484,"byte_end":77507,"line_start":16,"line_end":16,"column_start":1,"column_end":24}},{"value":"/     .update(b\"bar\")","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":77508,"byte_end":77531,"line_start":17,"line_end":17,"column_start":1,"column_end":24}},{"value":"/     .update(b\"baz\")","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":77532,"byte_end":77555,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/     .finalize();","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":77556,"byte_end":77576,"line_start":19,"line_end":19,"column_start":1,"column_end":21}},{"value":"/ assert_eq!(\"e69c7d2c42a5ac14948772231c68c552\", &hash.to_hex());","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":77577,"byte_end":77644,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":77645,"byte_end":77652,"line_start":21,"line_end":21,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":234},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":78412,"byte_end":78420,"line_start":52,"line_end":52,"column_start":8,"column_end":16},"name":"blake2bp","qualname":"::blake2bp::blake2bp","value":"pub fn blake2bp(&[u8]) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" Compute the BLAKE2bp hash of a slice of bytes all at once, using default\n parameters.","sig":null,"attributes":[{"value":"/ Compute the BLAKE2bp hash of a slice of bytes all at once, using default","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":77982,"byte_end":78058,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/ parameters.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":78059,"byte_end":78074,"line_start":41,"line_end":41,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":78075,"byte_end":78078,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":78079,"byte_end":78092,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":78093,"byte_end":78096,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":78097,"byte_end":78104,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ # use blake2b_simd::blake2bp::blake2bp;","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":78105,"byte_end":78148,"line_start":46,"line_end":46,"column_start":1,"column_end":44}},{"value":"/ let expected = \"8ca9ccee7946afcb686fe7556628b5ba1bf9a691da37ca58cd049354d99f3704\\","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":78149,"byte_end":78234,"line_start":47,"line_end":47,"column_start":1,"column_end":86}},{"value":"/                 2c007427e5f219b9ab5063707ec6823872dee413ee014b4d02f2ebb6abb5f643\";","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":78235,"byte_end":78321,"line_start":48,"line_end":48,"column_start":1,"column_end":87}},{"value":"/ let hash = blake2bp(b\"foo\");","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":78322,"byte_end":78354,"line_start":49,"line_end":49,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(expected, &hash.to_hex());","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":78355,"byte_end":78396,"line_start":50,"line_end":50,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":78397,"byte_end":78404,"line_start":51,"line_end":51,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":637},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":79017,"byte_end":79023,"line_start":70,"line_end":70,"column_start":12,"column_end":18},"name":"Params","qualname":"::blake2bp::Params","value":"Params {  }","parent":null,"children":[{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":642}],"decl_id":null,"docs":" A parameter builder for BLAKE2bp, just like the [`Params`](../struct.Params.html) type for\n BLAKE2b.","sig":null,"attributes":[{"value":"/ A parameter builder for BLAKE2bp, just like the [`Params`](../struct.Params.html) type for","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":78478,"byte_end":78572,"line_start":56,"line_end":56,"column_start":1,"column_end":95}},{"value":"/ BLAKE2b.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":78573,"byte_end":78585,"line_start":57,"line_end":57,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":78586,"byte_end":78589,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ This builder only supports configuring the hash length and a secret key. This matches the","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":78590,"byte_end":78683,"line_start":59,"line_end":59,"column_start":1,"column_end":94}},{"value":"/ options provided by the [reference","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":78684,"byte_end":78722,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/ implementation](https://github.com/BLAKE2/BLAKE2/blob/320c325437539ae91091ce62efec1913cd8093c2/ref/blake2.h#L162-L165).","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":78723,"byte_end":78846,"line_start":61,"line_end":61,"column_start":1,"column_end":124}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":78847,"byte_end":78850,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":78851,"byte_end":78864,"line_start":63,"line_end":63,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":78865,"byte_end":78868,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":78869,"byte_end":78876,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/ use blake2b_simd::blake2bp;","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":78877,"byte_end":78908,"line_start":66,"line_end":66,"column_start":1,"column_end":32}},{"value":"/ let mut state = blake2bp::Params::new().hash_length(32).to_state();","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":78909,"byte_end":78980,"line_start":67,"line_end":67,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":78981,"byte_end":78988,"line_start":68,"line_end":68,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":79199,"byte_end":79202,"line_start":79,"line_end":79,"column_start":12,"column_end":15},"name":"new","qualname":"<Params>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `Params::default()`.\n","sig":null,"attributes":[{"value":"/ Equivalent to `Params::default()`.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":79149,"byte_end":79187,"line_start":78,"line_end":78,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":81051,"byte_end":81055,"line_start":123,"line_end":123,"column_start":12,"column_end":16},"name":"hash","qualname":"<Params>::hash","value":"pub fn hash(&Self, &[u8]) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" Hash an input all at once with these parameters.\n","sig":null,"attributes":[{"value":"/ Hash an input all at once with these parameters.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":80987,"byte_end":81039,"line_start":122,"line_end":122,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":82172,"byte_end":82180,"line_start":154,"line_end":154,"column_start":12,"column_end":20},"name":"to_state","qualname":"<Params>::to_state","value":"pub fn to_state(&Self) -> State","parent":null,"children":[],"decl_id":null,"docs":" Construct a BLAKE2bp `State` object based on these parameters.\n","sig":null,"attributes":[{"value":"/ Construct a BLAKE2bp `State` object based on these parameters.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":82094,"byte_end":82160,"line_start":153,"line_end":153,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":82477,"byte_end":82488,"line_start":161,"line_end":161,"column_start":12,"column_end":23},"name":"hash_length","qualname":"<Params>::hash_length","value":"pub fn hash_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the length of the final hash, from 1 to `OUTBYTES` (64). Apart from controlling the\n length of the final `Hash`, this is also associated data, and changing it will result in a\n totally different hash.\n","sig":null,"attributes":[{"value":"/ Set the length of the final hash, from 1 to `OUTBYTES` (64). Apart from controlling the","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":82243,"byte_end":82334,"line_start":158,"line_end":158,"column_start":5,"column_end":96}},{"value":"/ length of the final `Hash`, this is also associated data, and changing it will result in a","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":82339,"byte_end":82433,"line_start":159,"line_end":159,"column_start":5,"column_end":99}},{"value":"/ totally different hash.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":82438,"byte_end":82465,"line_start":160,"line_end":160,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":82892,"byte_end":82895,"line_start":173,"line_end":173,"column_start":12,"column_end":15},"name":"key","qualname":"<Params>::key","value":"pub fn key(&mut Self, &[u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Use a secret key, so that BLAKE2bp acts as a MAC. The maximum key length is `KEYBYTES`\n (64). An empty key is equivalent to having no key at all.\n","sig":null,"attributes":[{"value":"/ Use a secret key, so that BLAKE2bp acts as a MAC. The maximum key length is `KEYBYTES`","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":82724,"byte_end":82814,"line_start":171,"line_end":171,"column_start":5,"column_end":95}},{"value":"/ (64). An empty key is equivalent to having no key at all.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":82819,"byte_end":82880,"line_start":172,"line_end":172,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":645},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":84132,"byte_end":84137,"line_start":218,"line_end":218,"column_start":12,"column_end":17},"name":"State","qualname":"::blake2bp::State","value":"State {  }","parent":null,"children":[{"krate":0,"index":646},{"krate":0,"index":649},{"krate":0,"index":651},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657}],"decl_id":null,"docs":" An incremental hasher for BLAKE2bp, just like the [`State`](../struct.State.html) type for\n BLAKE2b.","sig":null,"attributes":[{"value":"/ An incremental hasher for BLAKE2bp, just like the [`State`](../struct.State.html) type for","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":83574,"byte_end":83668,"line_start":200,"line_end":200,"column_start":1,"column_end":95}},{"value":"/ BLAKE2b.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":83669,"byte_end":83681,"line_start":201,"line_end":201,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":83682,"byte_end":83685,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":83686,"byte_end":83699,"line_start":203,"line_end":203,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":83700,"byte_end":83703,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":83704,"byte_end":83711,"line_start":205,"line_end":205,"column_start":1,"column_end":8}},{"value":"/ use blake2b_simd::blake2bp;","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":83712,"byte_end":83743,"line_start":206,"line_end":206,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":83744,"byte_end":83747,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ let mut state = blake2bp::State::new();","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":83748,"byte_end":83791,"line_start":208,"line_end":208,"column_start":1,"column_end":44}},{"value":"/ state.update(b\"foo\");","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":83792,"byte_end":83817,"line_start":209,"line_end":209,"column_start":1,"column_end":26}},{"value":"/ state.update(b\"bar\");","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":83818,"byte_end":83843,"line_start":210,"line_end":210,"column_start":1,"column_end":26}},{"value":"/ let hash = state.finalize();","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":83844,"byte_end":83876,"line_start":211,"line_end":211,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":83877,"byte_end":83880,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ let expected = \"e654427b6ef02949471712263e59071abbb6aa94855674c1daeed6cfaf127c33\\","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":83881,"byte_end":83966,"line_start":213,"line_end":213,"column_start":1,"column_end":86}},{"value":"/                 dfa3205f7f7f71e4f0673d25fa82a368488911f446bccd323af3ab03f53e56e5\";","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":83967,"byte_end":84053,"line_start":214,"line_end":214,"column_start":1,"column_end":87}},{"value":"/ assert_eq!(expected, &hash.to_hex());","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":84054,"byte_end":84095,"line_start":215,"line_end":215,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":84096,"byte_end":84103,"line_start":216,"line_end":216,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":84698,"byte_end":84701,"line_start":234,"line_end":234,"column_start":12,"column_end":15},"name":"new","qualname":"<State>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `State::default()` or `Params::default().to_state()`.\n","sig":null,"attributes":[{"value":"/ Equivalent to `State::default()` or `Params::default().to_state()`.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":84615,"byte_end":84686,"line_start":233,"line_end":233,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":87425,"byte_end":87431,"line_start":301,"line_end":301,"column_start":12,"column_end":18},"name":"update","qualname":"<State>::update","value":"pub fn update(&mut Self, &[u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add input to the hash. You can call `update` any number of times.\n","sig":null,"attributes":[{"value":"/ Add input to the hash. You can call `update` any number of times.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":87344,"byte_end":87413,"line_start":300,"line_end":300,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":90530,"byte_end":90538,"line_start":365,"line_end":365,"column_start":12,"column_end":20},"name":"finalize","qualname":"<State>::finalize","value":"pub fn finalize(&Self) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" Finalize the state and return a `Hash`. This method is idempotent, and calling it multiple\n times will give the same result. It's also possible to `update` with more input in between.\n","sig":null,"attributes":[{"value":"/ Finalize the state and return a `Hash`. This method is idempotent, and calling it multiple","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":90324,"byte_end":90418,"line_start":363,"line_end":363,"column_start":5,"column_end":99}},{"value":"/ times will give the same result. It's also possible to `update` with more input in between.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":90423,"byte_end":90518,"line_start":364,"line_end":364,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":91885,"byte_end":91890,"line_start":401,"line_end":401,"column_start":12,"column_end":17},"name":"count","qualname":"<State>::count","value":"pub fn count(&Self) -> Count","parent":null,"children":[],"decl_id":null,"docs":" Return the total number of bytes input so far.","sig":null,"attributes":[{"value":"/ Return the total number of bytes input so far.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":91667,"byte_end":91717,"line_start":397,"line_end":397,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":91722,"byte_end":91725,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ Note that `count` doesn't include the bytes of the key block, if any.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":91730,"byte_end":91803,"line_start":399,"line_end":399,"column_start":5,"column_end":78}},{"value":"/ It's exactly the total number of input bytes fed to `update`.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":91808,"byte_end":91873,"line_start":400,"line_end":400,"column_start":5,"column_end":70}}]},{"kind":"Mod","id":{"krate":0,"index":324},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"many","qualname":"::many","value":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":348},{"krate":0,"index":352},{"krate":0,"index":355},{"krate":0,"index":359},{"krate":0,"index":728},{"krate":0,"index":738},{"krate":0,"index":365},{"krate":0,"index":369},{"krate":0,"index":372}],"decl_id":null,"docs":" Interfaces for hashing multiple inputs at once, using SIMD more\n efficiently.","sig":null,"attributes":[{"value":"/ Interfaces for hashing multiple inputs at once, using SIMD more","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":116992,"byte_end":117059,"line_start":1,"line_end":1,"column_start":1,"column_end":68}},{"value":"/ efficiently.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":117060,"byte_end":117076,"line_start":2,"line_end":2,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":117077,"byte_end":117080,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ The throughput of these interfaces is comparable to BLAKE2bp, about twice","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":117081,"byte_end":117158,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"/ the throughput of regular BLAKE2b when AVX2 is available.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":117159,"byte_end":117220,"line_start":5,"line_end":5,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":117221,"byte_end":117224,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ These interfaces can accept any number of inputs, and the implementation","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":117225,"byte_end":117301,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ does its best to parallelize them. In general, the more inputs you can pass","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":117302,"byte_end":117381,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/ in at once the better. If you need to batch your inputs in smaller groups,","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":117382,"byte_end":117460,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ see the [`degree`](fn.degree.html) function for a good batch size.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":117461,"byte_end":117531,"line_start":10,"line_end":10,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":117532,"byte_end":117535,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The implementation keeps working in parallel even when inputs are of","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":117536,"byte_end":117608,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ different lengths, by managing a working set of jobs whose input isn't yet","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":117609,"byte_end":117687,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ exhausted. However, if one or two inputs are much longer than the others,","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":117688,"byte_end":117765,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ and they're encountered only at the end, there might not be any remaining","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":117766,"byte_end":117843,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ work to parallelize them with. In this case, sorting the inputs","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":117844,"byte_end":117911,"line_start":16,"line_end":16,"column_start":1,"column_end":68}},{"value":"/ longest-first can improve parallelism.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":117912,"byte_end":117954,"line_start":17,"line_end":17,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":117955,"byte_end":117958,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":117959,"byte_end":117972,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":117973,"byte_end":117976,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":117977,"byte_end":117984,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ use blake2b_simd::{blake2b, State, many::update_many};","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":117985,"byte_end":118043,"line_start":22,"line_end":22,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":118044,"byte_end":118047,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let mut states = [","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":118048,"byte_end":118070,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/     State::new(),","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":118071,"byte_end":118092,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     State::new(),","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":118093,"byte_end":118114,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     State::new(),","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":118115,"byte_end":118136,"line_start":27,"line_end":27,"column_start":1,"column_end":22}},{"value":"/     State::new(),","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":118137,"byte_end":118158,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/ ];","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":118159,"byte_end":118165,"line_start":29,"line_end":29,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":118166,"byte_end":118169,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let inputs = [","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":118170,"byte_end":118188,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/     &b\"foo\"[..],","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":118189,"byte_end":118209,"line_start":32,"line_end":32,"column_start":1,"column_end":21}},{"value":"/     &b\"bar\"[..],","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":118210,"byte_end":118230,"line_start":33,"line_end":33,"column_start":1,"column_end":21}},{"value":"/     &b\"baz\"[..],","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":118231,"byte_end":118251,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/     &b\"bing\"[..],","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":118252,"byte_end":118273,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/ ];","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":118274,"byte_end":118280,"line_start":36,"line_end":36,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":118281,"byte_end":118284,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ update_many(states.iter_mut().zip(inputs.iter()));","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":118285,"byte_end":118339,"line_start":38,"line_end":38,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":118340,"byte_end":118343,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ for (state, input) in states.iter_mut().zip(inputs.iter()) {","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":118344,"byte_end":118408,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/     assert_eq!(blake2b(input), state.finalize());","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":118409,"byte_end":118462,"line_start":41,"line_end":41,"column_start":1,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":118463,"byte_end":118468,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":118469,"byte_end":118476,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":342},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":119323,"byte_end":119333,"line_start":66,"line_end":66,"column_start":11,"column_end":21},"name":"MAX_DEGREE","qualname":"::many::MAX_DEGREE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The largest possible value of [`degree`](fn.degree.html) on the target\n platform.","sig":null,"attributes":[{"value":"/ The largest possible value of [`degree`](fn.degree.html) on the target","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":118766,"byte_end":118840,"line_start":57,"line_end":57,"column_start":1,"column_end":75}},{"value":"/ platform.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":118841,"byte_end":118854,"line_start":58,"line_end":58,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":118855,"byte_end":118858,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Note that this constant reflects the parallelism degree supported by this","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":118859,"byte_end":118936,"line_start":60,"line_end":60,"column_start":1,"column_end":78}},{"value":"/ crate, so it will change over time as support is added or removed. For","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":118937,"byte_end":119011,"line_start":61,"line_end":61,"column_start":1,"column_end":75}},{"value":"/ example, when Rust stabilizes AVX-512 support and this crate adds an","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":119012,"byte_end":119084,"line_start":62,"line_end":62,"column_start":1,"column_end":73}},{"value":"/ AVX-512 implementation, this constant will double on x86 targets. If that","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":119085,"byte_end":119162,"line_start":63,"line_end":63,"column_start":1,"column_end":78}},{"value":"/ implementation is an optional feature (e.g. because it's nightly-only), the","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":119163,"byte_end":119242,"line_start":64,"line_end":64,"column_start":1,"column_end":80}},{"value":"/ value of this constant will depend on that optional feature also.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":119243,"byte_end":119312,"line_start":65,"line_end":65,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":343},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":120707,"byte_end":120713,"line_start":92,"line_end":92,"column_start":8,"column_end":14},"name":"degree","qualname":"::many::degree","value":"pub fn degree() -> usize","parent":null,"children":[],"decl_id":null,"docs":" The parallelism degree of the implementation, detected at runtime. If you\n hash your inputs in small batches, making the batch size a multiple of\n `degree` will generally give good performance.","sig":null,"attributes":[{"value":"/ The parallelism degree of the implementation, detected at runtime. If you","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":119362,"byte_end":119439,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"/ hash your inputs in small batches, making the batch size a multiple of","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":119440,"byte_end":119514,"line_start":69,"line_end":69,"column_start":1,"column_end":75}},{"value":"/ `degree` will generally give good performance.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":119515,"byte_end":119565,"line_start":70,"line_end":70,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":119566,"byte_end":119569,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ For example, an x86 processor that supports AVX2 can compute four BLAKE2b","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":119570,"byte_end":119647,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/ hashes in parallel, so `degree` returns 4 on that machine. If you call","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":119648,"byte_end":119722,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ [`hash_many`] with only three inputs, that's not enough to use the AVX2","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":119723,"byte_end":119798,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ implementation, and your average throughput will be lower. Likewise if you","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":119799,"byte_end":119877,"line_start":75,"line_end":75,"column_start":1,"column_end":79}},{"value":"/ call it with five inputs of equal length, the first four will be hashed in","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":119878,"byte_end":119956,"line_start":76,"line_end":76,"column_start":1,"column_end":79}},{"value":"/ parallel with AVX2, but the last one will have to be hashed by itself, and","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":119957,"byte_end":120035,"line_start":77,"line_end":77,"column_start":1,"column_end":79}},{"value":"/ again your average throughput will be lower.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":120036,"byte_end":120084,"line_start":78,"line_end":78,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":120085,"byte_end":120088,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ As noted in the module level docs, performance is more complicated if your","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":120089,"byte_end":120167,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ inputs are of different lengths. When parallelizing long and short inputs","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":120168,"byte_end":120245,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"/ together, the longer ones will have bytes left over, and the implementation","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":120246,"byte_end":120325,"line_start":82,"line_end":82,"column_start":1,"column_end":80}},{"value":"/ will try to parallelize those leftover bytes with subsequent inputs. The","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":120326,"byte_end":120402,"line_start":83,"line_end":83,"column_start":1,"column_end":77}},{"value":"/ more inputs available in that case, the more the implementation will be","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":120403,"byte_end":120478,"line_start":84,"line_end":84,"column_start":1,"column_end":76}},{"value":"/ able to parallelize.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":120479,"byte_end":120503,"line_start":85,"line_end":85,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":120504,"byte_end":120507,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ If you need a constant batch size, for example to collect inputs in an","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":120508,"byte_end":120582,"line_start":87,"line_end":87,"column_start":1,"column_end":75}},{"value":"/ array, see [`MAX_DEGREE`].","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":120583,"byte_end":120613,"line_start":88,"line_end":88,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":120614,"byte_end":120617,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ [`hash_many`]: fn.hash_many.html","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":120618,"byte_end":120654,"line_start":90,"line_end":90,"column_start":1,"column_end":37}},{"value":"/ [`MAX_DEGREE`]: constant.MAX_DEGREE.html","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":120655,"byte_end":120699,"line_start":91,"line_end":91,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":359},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":124010,"byte_end":124021,"line_start":208,"line_end":208,"column_start":8,"column_end":19},"name":"update_many","qualname":"::many::update_many","value":"pub fn update_many<'a, 'b, I, T: ?Sized>(I) where I: IntoIterator<Item =\n(&'a mut State, &'b T)>, T: 'b + AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Update any number of `State` objects at once.","sig":null,"attributes":[{"value":"/ Update any number of `State` objects at once.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":123431,"byte_end":123480,"line_start":181,"line_end":181,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":123481,"byte_end":123484,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":123485,"byte_end":123498,"line_start":183,"line_end":183,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":123499,"byte_end":123502,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":123503,"byte_end":123510,"line_start":185,"line_end":185,"column_start":1,"column_end":8}},{"value":"/ use blake2b_simd::{blake2b, State, many::update_many};","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":123511,"byte_end":123569,"line_start":186,"line_end":186,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":123570,"byte_end":123573,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ let mut states = [","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":123574,"byte_end":123596,"line_start":188,"line_end":188,"column_start":1,"column_end":23}},{"value":"/     State::new(),","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":123597,"byte_end":123618,"line_start":189,"line_end":189,"column_start":1,"column_end":22}},{"value":"/     State::new(),","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":123619,"byte_end":123640,"line_start":190,"line_end":190,"column_start":1,"column_end":22}},{"value":"/     State::new(),","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":123641,"byte_end":123662,"line_start":191,"line_end":191,"column_start":1,"column_end":22}},{"value":"/     State::new(),","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":123663,"byte_end":123684,"line_start":192,"line_end":192,"column_start":1,"column_end":22}},{"value":"/ ];","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":123685,"byte_end":123691,"line_start":193,"line_end":193,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":123692,"byte_end":123695,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ let inputs = [","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":123696,"byte_end":123714,"line_start":195,"line_end":195,"column_start":1,"column_end":19}},{"value":"/     &b\"foo\"[..],","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":123715,"byte_end":123735,"line_start":196,"line_end":196,"column_start":1,"column_end":21}},{"value":"/     &b\"bar\"[..],","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":123736,"byte_end":123756,"line_start":197,"line_end":197,"column_start":1,"column_end":21}},{"value":"/     &b\"baz\"[..],","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":123757,"byte_end":123777,"line_start":198,"line_end":198,"column_start":1,"column_end":21}},{"value":"/     &b\"bing\"[..],","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":123778,"byte_end":123799,"line_start":199,"line_end":199,"column_start":1,"column_end":22}},{"value":"/ ];","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":123800,"byte_end":123806,"line_start":200,"line_end":200,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":123807,"byte_end":123810,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ update_many(states.iter_mut().zip(inputs.iter()));","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":123811,"byte_end":123865,"line_start":202,"line_end":202,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":123866,"byte_end":123869,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ for (state, input) in states.iter_mut().zip(inputs.iter()) {","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":123870,"byte_end":123934,"line_start":204,"line_end":204,"column_start":1,"column_end":65}},{"value":"/     assert_eq!(blake2b(input), state.finalize());","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":123935,"byte_end":123988,"line_start":205,"line_end":205,"column_start":1,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":123989,"byte_end":123994,"line_start":206,"line_end":206,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":123995,"byte_end":124002,"line_start":207,"line_end":207,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":728},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":126473,"byte_end":126484,"line_start":268,"line_end":268,"column_start":12,"column_end":23},"name":"HashManyJob","qualname":"::many::HashManyJob","value":"HashManyJob {  }","parent":null,"children":[{"krate":0,"index":730},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737}],"decl_id":null,"docs":" A job for the [`hash_many`] function. After calling [`hash_many`] on a\n collection of `HashManyJob` objects, you can call [`to_hash`] on each job\n to get the result.","sig":null,"attributes":[{"value":"/ A job for the [`hash_many`] function. After calling [`hash_many`] on a","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":126172,"byte_end":126246,"line_start":261,"line_end":261,"column_start":1,"column_end":75}},{"value":"/ collection of `HashManyJob` objects, you can call [`to_hash`] on each job","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":126247,"byte_end":126324,"line_start":262,"line_end":262,"column_start":1,"column_end":78}},{"value":"/ to get the result.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":126325,"byte_end":126347,"line_start":263,"line_end":263,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":126348,"byte_end":126351,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ [`hash_many`]: fn.hash_many.html","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":126352,"byte_end":126388,"line_start":265,"line_end":265,"column_start":1,"column_end":37}},{"value":"/ [`to_hash`]: struct.HashManyJob.html#method.to_hash","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":126389,"byte_end":126444,"line_start":266,"line_end":266,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":126808,"byte_end":126811,"line_start":282,"line_end":282,"column_start":12,"column_end":15},"name":"new","qualname":"<HashManyJob>::new","value":"pub fn new(&Params, &'a [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `HashManyJob` from a set of hashing parameters and an\n input.\n","sig":null,"attributes":[{"value":"/ Construct a new `HashManyJob` from a set of hashing parameters and an","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":126694,"byte_end":126767,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ input.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":126772,"byte_end":126782,"line_start":280,"line_end":280,"column_start":5,"column_end":15}},{"value":"inline","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":126787,"byte_end":126796,"line_start":281,"line_end":281,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":128094,"byte_end":128101,"line_start":321,"line_end":321,"column_start":12,"column_end":19},"name":"to_hash","qualname":"<HashManyJob>::to_hash","value":"pub fn to_hash(&Self) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" Get the hash from a finished job. If you call this before calling\n [`hash_many`], it will panic in debug mode.","sig":null,"attributes":[{"value":"/ Get the hash from a finished job. If you call this before calling","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":127898,"byte_end":127967,"line_start":316,"line_end":316,"column_start":5,"column_end":74}},{"value":"/ [`hash_many`], it will panic in debug mode.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":127972,"byte_end":128019,"line_start":317,"line_end":317,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":128024,"byte_end":128027,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ [`hash_many`]: fn.hash_many.html","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":128032,"byte_end":128068,"line_start":319,"line_end":319,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":128073,"byte_end":128082,"line_start":320,"line_end":320,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":372},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":129738,"byte_end":129747,"line_start":381,"line_end":381,"column_start":8,"column_end":17},"name":"hash_many","qualname":"::many::hash_many","value":"pub fn hash_many<'a, 'b, I>(I) where 'b:'a, I: IntoIterator<Item =\n&'a mut HashManyJob>","parent":null,"children":[],"decl_id":null,"docs":" Hash any number of complete inputs all at once.","sig":null,"attributes":[{"value":"/ Hash any number of complete inputs all at once.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":128747,"byte_end":128798,"line_start":344,"line_end":344,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":128799,"byte_end":128802,"line_start":345,"line_end":345,"column_start":1,"column_end":4}},{"value":"/ This is slightly more efficient than using `update_many` with `State`","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":128803,"byte_end":128876,"line_start":346,"line_end":346,"column_start":1,"column_end":74}},{"value":"/ objects, because it doesn't need to do any buffering.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":128877,"byte_end":128934,"line_start":347,"line_end":347,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":128935,"byte_end":128938,"line_start":348,"line_end":348,"column_start":1,"column_end":4}},{"value":"/ Running `hash_many` on the same `HashManyJob` object more than once has no","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":128939,"byte_end":129017,"line_start":349,"line_end":349,"column_start":1,"column_end":79}},{"value":"/ effect.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":129018,"byte_end":129029,"line_start":350,"line_end":350,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":129030,"byte_end":129033,"line_start":351,"line_end":351,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":129034,"byte_end":129047,"line_start":352,"line_end":352,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":129048,"byte_end":129051,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":129052,"byte_end":129059,"line_start":354,"line_end":354,"column_start":1,"column_end":8}},{"value":"/ use blake2b_simd::{blake2b, Params, many::{HashManyJob, hash_many}};","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":129060,"byte_end":129132,"line_start":355,"line_end":355,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":129133,"byte_end":129136,"line_start":356,"line_end":356,"column_start":1,"column_end":4}},{"value":"/ let inputs = [","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":129137,"byte_end":129155,"line_start":357,"line_end":357,"column_start":1,"column_end":19}},{"value":"/     &b\"foo\"[..],","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":129156,"byte_end":129176,"line_start":358,"line_end":358,"column_start":1,"column_end":21}},{"value":"/     &b\"bar\"[..],","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":129177,"byte_end":129197,"line_start":359,"line_end":359,"column_start":1,"column_end":21}},{"value":"/     &b\"baz\"[..],","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":129198,"byte_end":129218,"line_start":360,"line_end":360,"column_start":1,"column_end":21}},{"value":"/     &b\"bing\"[..],","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":129219,"byte_end":129240,"line_start":361,"line_end":361,"column_start":1,"column_end":22}},{"value":"/ ];","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":129241,"byte_end":129247,"line_start":362,"line_end":362,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":129248,"byte_end":129251,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ let mut params = Params::new();","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":129252,"byte_end":129287,"line_start":364,"line_end":364,"column_start":1,"column_end":36}},{"value":"/ params.hash_length(16);","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":129288,"byte_end":129315,"line_start":365,"line_end":365,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":129316,"byte_end":129319,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ let mut jobs = [","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":129320,"byte_end":129340,"line_start":367,"line_end":367,"column_start":1,"column_end":21}},{"value":"/     HashManyJob::new(&params, inputs[0]),","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":129341,"byte_end":129386,"line_start":368,"line_end":368,"column_start":1,"column_end":46}},{"value":"/     HashManyJob::new(&params, inputs[1]),","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":129387,"byte_end":129432,"line_start":369,"line_end":369,"column_start":1,"column_end":46}},{"value":"/     HashManyJob::new(&params, inputs[2]),","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":129433,"byte_end":129478,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/     HashManyJob::new(&params, inputs[3]),","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":129479,"byte_end":129524,"line_start":371,"line_end":371,"column_start":1,"column_end":46}},{"value":"/ ];","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":129525,"byte_end":129531,"line_start":372,"line_end":372,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":129532,"byte_end":129535,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/ hash_many(jobs.iter_mut());","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":129536,"byte_end":129567,"line_start":374,"line_end":374,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":129568,"byte_end":129571,"line_start":375,"line_end":375,"column_start":1,"column_end":4}},{"value":"/ for (input, job) in inputs.iter().zip(jobs.iter()) {","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":129572,"byte_end":129628,"line_start":376,"line_end":376,"column_start":1,"column_end":57}},{"value":"/     let expected = params.hash(input);","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":129629,"byte_end":129671,"line_start":377,"line_end":377,"column_start":1,"column_end":43}},{"value":"/     assert_eq!(expected, job.to_hash());","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":129672,"byte_end":129716,"line_start":378,"line_end":378,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":129717,"byte_end":129722,"line_start":379,"line_end":379,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":129723,"byte_end":129730,"line_start":380,"line_end":380,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":380},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":2580,"byte_end":2588,"line_start":68,"line_end":68,"column_start":11,"column_end":19},"name":"OUTBYTES","qualname":"::OUTBYTES","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The max hash length.\n","sig":null,"attributes":[{"value":"/ The max hash length.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":2545,"byte_end":2569,"line_start":67,"line_end":67,"column_start":1,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":381},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":2655,"byte_end":2663,"line_start":70,"line_end":70,"column_start":11,"column_end":19},"name":"KEYBYTES","qualname":"::KEYBYTES","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The max key length.\n","sig":null,"attributes":[{"value":"/ The max key length.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":2621,"byte_end":2644,"line_start":69,"line_end":69,"column_start":1,"column_end":24}}]},{"kind":"Const","id":{"krate":0,"index":382},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":2731,"byte_end":2740,"line_start":72,"line_end":72,"column_start":11,"column_end":20},"name":"SALTBYTES","qualname":"::SALTBYTES","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The max salt length.\n","sig":null,"attributes":[{"value":"/ The max salt length.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":2696,"byte_end":2720,"line_start":71,"line_end":71,"column_start":1,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":383},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":2819,"byte_end":2832,"line_start":74,"line_end":74,"column_start":11,"column_end":24},"name":"PERSONALBYTES","qualname":"::PERSONALBYTES","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The max personalization length.\n","sig":null,"attributes":[{"value":"/ The max personalization length.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":2773,"byte_end":2808,"line_start":73,"line_end":73,"column_start":1,"column_end":36}}]},{"kind":"Const","id":{"krate":0,"index":384},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":3065,"byte_end":3075,"line_start":77,"line_end":77,"column_start":11,"column_end":21},"name":"BLOCKBYTES","qualname":"::BLOCKBYTES","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The number input bytes passed to each call to the compression function. Small benchmarks need\n to use an even multiple of `BLOCKBYTES`, or else their apparent throughput will be low.\n","sig":null,"attributes":[{"value":"/ The number input bytes passed to each call to the compression function. Small benchmarks need","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":2865,"byte_end":2962,"line_start":75,"line_end":75,"column_start":1,"column_end":98}},{"value":"/ to use an even multiple of `BLOCKBYTES`, or else their apparent throughput will be low.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":2963,"byte_end":3054,"line_start":76,"line_end":76,"column_start":1,"column_end":92}}]},{"kind":"Function","id":{"krate":0,"index":390},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":4513,"byte_end":4520,"line_start":117,"line_end":117,"column_start":8,"column_end":15},"name":"blake2b","qualname":"::blake2b","value":"pub fn blake2b(&[u8]) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" Compute the BLAKE2b hash of a slice of bytes all at once, using default\n parameters.","sig":null,"attributes":[{"value":"/ Compute the BLAKE2b hash of a slice of bytes all at once, using default","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":4086,"byte_end":4161,"line_start":105,"line_end":105,"column_start":1,"column_end":76}},{"value":"/ parameters.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":4162,"byte_end":4177,"line_start":106,"line_end":106,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":4178,"byte_end":4181,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":4182,"byte_end":4195,"line_start":108,"line_end":108,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":4196,"byte_end":4199,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":4200,"byte_end":4207,"line_start":110,"line_end":110,"column_start":1,"column_end":8}},{"value":"/ # use blake2b_simd::{blake2b, Params};","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":4208,"byte_end":4250,"line_start":111,"line_end":111,"column_start":1,"column_end":43}},{"value":"/ let expected = \"ca002330e69d3e6b84a46a56a6533fd79d51d97a3bb7cad6c2ff43b354185d6d\\","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":4251,"byte_end":4336,"line_start":112,"line_end":112,"column_start":1,"column_end":86}},{"value":"/                 c1e723fb3db4ae0737e120378424c714bb982d9dc5bbd7a0ab318240ddd18f8d\";","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":4337,"byte_end":4423,"line_start":113,"line_end":113,"column_start":1,"column_end":87}},{"value":"/ let hash = blake2b(b\"foo\");","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":4424,"byte_end":4455,"line_start":114,"line_end":114,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(expected, &hash.to_hex());","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":4456,"byte_end":4497,"line_start":115,"line_end":115,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":4498,"byte_end":4505,"line_start":116,"line_end":116,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":741},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":5510,"byte_end":5516,"line_start":146,"line_end":146,"column_start":12,"column_end":18},"name":"Params","qualname":"::Params","value":"Params {  }","parent":null,"children":[{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":746},{"krate":0,"index":748},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757}],"decl_id":null,"docs":" A parameter builder that exposes all the non-default BLAKE2 features.","sig":null,"attributes":[{"value":"/ A parameter builder that exposes all the non-default BLAKE2 features.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":4578,"byte_end":4651,"line_start":121,"line_end":121,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":4652,"byte_end":4655,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ Apart from `hash_length`, which controls the length of the final `Hash`,","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":4656,"byte_end":4732,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/ all of these parameters are just associated data that gets mixed with the","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":4733,"byte_end":4810,"line_start":124,"line_end":124,"column_start":1,"column_end":78}},{"value":"/ input. For more details, see [the BLAKE2 spec](https://blake2.net/blake2.pdf).","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":4811,"byte_end":4893,"line_start":125,"line_end":125,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":4894,"byte_end":4897,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ Several of the parameters have a valid range defined in the spec and","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":4898,"byte_end":4970,"line_start":127,"line_end":127,"column_start":1,"column_end":73}},{"value":"/ documented below. Trying to set an invalid parameter will panic.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":4971,"byte_end":5039,"line_start":128,"line_end":128,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":5040,"byte_end":5043,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":5044,"byte_end":5057,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":5058,"byte_end":5061,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":5062,"byte_end":5069,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/ # use blake2b_simd::Params;","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":5070,"byte_end":5101,"line_start":133,"line_end":133,"column_start":1,"column_end":32}},{"value":"/ // Create a Params object with a secret key and a non-default length.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":5102,"byte_end":5175,"line_start":134,"line_end":134,"column_start":1,"column_end":74}},{"value":"/ let mut params = Params::new();","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":5176,"byte_end":5211,"line_start":135,"line_end":135,"column_start":1,"column_end":36}},{"value":"/ params.key(b\"my secret key\");","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":5212,"byte_end":5245,"line_start":136,"line_end":136,"column_start":1,"column_end":34}},{"value":"/ params.hash_length(16);","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":5246,"byte_end":5273,"line_start":137,"line_end":137,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":5274,"byte_end":5277,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ // Use those params to hash an input all at once.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":5278,"byte_end":5331,"line_start":139,"line_end":139,"column_start":1,"column_end":54}},{"value":"/ let hash = params.hash(b\"my input\");","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":5332,"byte_end":5372,"line_start":140,"line_end":140,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":5373,"byte_end":5376,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ // Or use those params to build an incremental State.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":5377,"byte_end":5434,"line_start":142,"line_end":142,"column_start":1,"column_end":58}},{"value":"/ let mut state = params.to_state();","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":5435,"byte_end":5473,"line_start":143,"line_end":143,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":5474,"byte_end":5481,"line_start":144,"line_end":144,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":5943,"byte_end":5946,"line_start":165,"line_end":165,"column_start":12,"column_end":15},"name":"new","qualname":"<Params>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `Params::default()`.\n","sig":null,"attributes":[{"value":"/ Equivalent to `Params::default()`.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":5879,"byte_end":5917,"line_start":163,"line_end":163,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":5922,"byte_end":5931,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":7518,"byte_end":7522,"line_start":208,"line_end":208,"column_start":12,"column_end":16},"name":"hash","qualname":"<Params>::hash","value":"pub fn hash(&Self, &[u8]) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" Hash an input all at once with these parameters.\n","sig":null,"attributes":[{"value":"/ Hash an input all at once with these parameters.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":7440,"byte_end":7492,"line_start":206,"line_end":206,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":7497,"byte_end":7506,"line_start":207,"line_end":207,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":8201,"byte_end":8209,"line_start":230,"line_end":230,"column_start":12,"column_end":20},"name":"to_state","qualname":"<Params>::to_state","value":"pub fn to_state(&Self) -> State","parent":null,"children":[],"decl_id":null,"docs":" Construct a `State` object based on these parameters, for hashing input\n incrementally.\n","sig":null,"attributes":[{"value":"/ Construct a `State` object based on these parameters, for hashing input","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":8091,"byte_end":8166,"line_start":228,"line_end":228,"column_start":5,"column_end":80}},{"value":"/ incrementally.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":8171,"byte_end":8189,"line_start":229,"line_end":229,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":8529,"byte_end":8540,"line_start":238,"line_end":238,"column_start":12,"column_end":23},"name":"hash_length","qualname":"<Params>::hash_length","value":"pub fn hash_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the length of the final hash in bytes, from 1 to `OUTBYTES` (64). Apart from\n controlling the length of the final `Hash`, this is also associated data, and changing it\n will result in a totally different hash.\n","sig":null,"attributes":[{"value":"/ Set the length of the final hash in bytes, from 1 to `OUTBYTES` (64). Apart from","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":8272,"byte_end":8356,"line_start":234,"line_end":234,"column_start":5,"column_end":89}},{"value":"/ controlling the length of the final `Hash`, this is also associated data, and changing it","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":8361,"byte_end":8454,"line_start":235,"line_end":235,"column_start":5,"column_end":98}},{"value":"/ will result in a totally different hash.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":8459,"byte_end":8503,"line_start":236,"line_end":236,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":8508,"byte_end":8517,"line_start":237,"line_end":237,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":8956,"byte_end":8959,"line_start":251,"line_end":251,"column_start":12,"column_end":15},"name":"key","qualname":"<Params>::key","value":"pub fn key(&mut Self, &[u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Use a secret key, so that BLAKE2 acts as a MAC. The maximum key length is `KEYBYTES` (64).\n An empty key is equivalent to having no key at all.\n","sig":null,"attributes":[{"value":"/ Use a secret key, so that BLAKE2 acts as a MAC. The maximum key length is `KEYBYTES` (64).","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":8776,"byte_end":8870,"line_start":248,"line_end":248,"column_start":5,"column_end":99}},{"value":"/ An empty key is equivalent to having no key at all.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":8875,"byte_end":8930,"line_start":249,"line_end":249,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":8935,"byte_end":8944,"line_start":250,"line_end":250,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":9397,"byte_end":9401,"line_start":262,"line_end":262,"column_start":12,"column_end":16},"name":"salt","qualname":"<Params>::salt","value":"pub fn salt(&mut Self, &[u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" At most `SALTBYTES` (16). Shorter salts are padded with null bytes. An empty salt is\n equivalent to having no salt at all.\n","sig":null,"attributes":[{"value":"/ At most `SALTBYTES` (16). Shorter salts are padded with null bytes. An empty salt is","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":9238,"byte_end":9326,"line_start":259,"line_end":259,"column_start":5,"column_end":93}},{"value":"/ equivalent to having no salt at all.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":9331,"byte_end":9371,"line_start":260,"line_end":260,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":9376,"byte_end":9385,"line_start":261,"line_end":261,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":9829,"byte_end":9837,"line_start":272,"line_end":272,"column_start":12,"column_end":20},"name":"personal","qualname":"<Params>::personal","value":"pub fn personal(&mut Self, &[u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" At most `PERSONALBYTES` (16). Shorter personalizations are padded with null bytes. An empty\n personalization is equivalent to having no personalization at all.\n","sig":null,"attributes":[{"value":"/ At most `PERSONALBYTES` (16). Shorter personalizations are padded with null bytes. An empty","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":9633,"byte_end":9728,"line_start":269,"line_end":269,"column_start":5,"column_end":100}},{"value":"/ personalization is equivalent to having no personalization at all.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":9733,"byte_end":9803,"line_start":270,"line_end":270,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":9808,"byte_end":9817,"line_start":271,"line_end":271,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":10300,"byte_end":10306,"line_start":285,"line_end":285,"column_start":12,"column_end":18},"name":"fanout","qualname":"<Params>::fanout","value":"pub fn fanout(&mut Self, u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" From 0 (meaning unlimited) to 255. The default is 1 (meaning sequential).\n","sig":null,"attributes":[{"value":"/ From 0 (meaning unlimited) to 255. The default is 1 (meaning sequential).","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":10197,"byte_end":10274,"line_start":283,"line_end":283,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":10279,"byte_end":10288,"line_start":284,"line_end":284,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":10536,"byte_end":10545,"line_start":292,"line_end":292,"column_start":12,"column_end":21},"name":"max_depth","qualname":"<Params>::max_depth","value":"pub fn max_depth(&mut Self, u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" From 0 (meaning BLAKE2X B2 hashes), through 1 (the default, meaning sequential) to 255 (meaning unlimited).\n","sig":null,"attributes":[{"value":"/ From 0 (meaning BLAKE2X B2 hashes), through 1 (the default, meaning sequential) to 255 (meaning unlimited).","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":10399,"byte_end":10510,"line_start":290,"line_end":290,"column_start":5,"column_end":116}},{"value":"inline","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":10515,"byte_end":10524,"line_start":291,"line_end":291,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":10737,"byte_end":10752,"line_start":299,"line_end":299,"column_start":12,"column_end":27},"name":"max_leaf_length","qualname":"<Params>::max_leaf_length","value":"pub fn max_leaf_length(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" From 0 (the default, meaning unlimited or sequential) to `2^32 - 1`.\n","sig":null,"attributes":[{"value":"/ From 0 (the default, meaning unlimited or sequential) to `2^32 - 1`.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":10639,"byte_end":10711,"line_start":297,"line_end":297,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":10716,"byte_end":10725,"line_start":298,"line_end":298,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":10966,"byte_end":10977,"line_start":306,"line_end":306,"column_start":12,"column_end":23},"name":"node_offset","qualname":"<Params>::node_offset","value":"pub fn node_offset(&mut Self, u64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" From 0 (the default, meaning first, leftmost, leaf, or sequential) to `2^64 - 1`.\n","sig":null,"attributes":[{"value":"/ From 0 (the default, meaning first, leftmost, leaf, or sequential) to `2^64 - 1`.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":10855,"byte_end":10940,"line_start":304,"line_end":304,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":10945,"byte_end":10954,"line_start":305,"line_end":305,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":11162,"byte_end":11172,"line_start":313,"line_end":313,"column_start":12,"column_end":22},"name":"node_depth","qualname":"<Params>::node_depth","value":"pub fn node_depth(&mut Self, u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" From 0 (the default, meaning leaf or sequential) to 255.\n","sig":null,"attributes":[{"value":"/ From 0 (the default, meaning leaf or sequential) to 255.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":11076,"byte_end":11136,"line_start":311,"line_end":311,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":11141,"byte_end":11150,"line_start":312,"line_end":312,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":11357,"byte_end":11374,"line_start":320,"line_end":320,"column_start":12,"column_end":29},"name":"inner_hash_length","qualname":"<Params>::inner_hash_length","value":"pub fn inner_hash_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" From 0 (the default, meaning sequential) to `OUTBYTES` (64).\n","sig":null,"attributes":[{"value":"/ From 0 (the default, meaning sequential) to `OUTBYTES` (64).","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":11267,"byte_end":11331,"line_start":318,"line_end":318,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":11336,"byte_end":11345,"line_start":319,"line_end":319,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":11841,"byte_end":11850,"line_start":332,"line_end":332,"column_start":12,"column_end":21},"name":"last_node","qualname":"<Params>::last_node","value":"pub fn last_node(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates the rightmost node in a row. This can also be changed on the\n `State` object, potentially after hashing has begun. See\n [`State::set_last_node`].","sig":null,"attributes":[{"value":"/ Indicates the rightmost node in a row. This can also be changed on the","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":11561,"byte_end":11635,"line_start":326,"line_end":326,"column_start":5,"column_end":79}},{"value":"/ `State` object, potentially after hashing has begun. See","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":11640,"byte_end":11700,"line_start":327,"line_end":327,"column_start":5,"column_end":65}},{"value":"/ [`State::set_last_node`].","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":11705,"byte_end":11734,"line_start":328,"line_end":328,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":11739,"byte_end":11742,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ [`State::set_last_node`]: struct.State.html#method.set_last_node","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":11747,"byte_end":11815,"line_start":330,"line_end":330,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":11820,"byte_end":11829,"line_start":331,"line_end":331,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":774},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":13354,"byte_end":13359,"line_start":389,"line_end":389,"column_start":12,"column_end":17},"name":"State","qualname":"::State","value":"State {  }","parent":null,"children":[{"krate":0,"index":775},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784}],"decl_id":null,"docs":" An incremental hasher for BLAKE2b.","sig":null,"attributes":[{"value":"/ An incremental hasher for BLAKE2b.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":12908,"byte_end":12946,"line_start":371,"line_end":371,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":12947,"byte_end":12950,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"/ To construct a `State` with non-default parameters, see `Params::to_state`.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":12951,"byte_end":13030,"line_start":373,"line_end":373,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":13031,"byte_end":13034,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":13035,"byte_end":13048,"line_start":375,"line_end":375,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":13049,"byte_end":13052,"line_start":376,"line_end":376,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":13053,"byte_end":13060,"line_start":377,"line_end":377,"column_start":1,"column_end":8}},{"value":"/ use blake2b_simd::{State, blake2b};","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":13061,"byte_end":13100,"line_start":378,"line_end":378,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":13101,"byte_end":13104,"line_start":379,"line_end":379,"column_start":1,"column_end":4}},{"value":"/ let mut state = blake2b_simd::State::new();","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":13105,"byte_end":13152,"line_start":380,"line_end":380,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":13153,"byte_end":13156,"line_start":381,"line_end":381,"column_start":1,"column_end":4}},{"value":"/ state.update(b\"foo\");","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":13157,"byte_end":13182,"line_start":382,"line_end":382,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(blake2b(b\"foo\"), state.finalize());","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":13183,"byte_end":13233,"line_start":383,"line_end":383,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":13234,"byte_end":13237,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/ state.update(b\"bar\");","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":13238,"byte_end":13263,"line_start":385,"line_end":385,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(blake2b(b\"foobar\"), state.finalize());","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":13264,"byte_end":13317,"line_start":386,"line_end":386,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":13318,"byte_end":13325,"line_start":387,"line_end":387,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":13662,"byte_end":13665,"line_start":402,"line_end":402,"column_start":12,"column_end":15},"name":"new","qualname":"<State>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `State::default()` or `Params::default().to_state()`.\n","sig":null,"attributes":[{"value":"/ Equivalent to `State::default()` or `Params::default().to_state()`.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":13579,"byte_end":13650,"line_start":401,"line_end":401,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":15514,"byte_end":15520,"line_start":453,"line_end":453,"column_start":12,"column_end":18},"name":"update","qualname":"<State>::update","value":"pub fn update(&mut Self, &[u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add input to the hash. You can call `update` any number of times.\n","sig":null,"attributes":[{"value":"/ Add input to the hash. You can call `update` any number of times.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":15433,"byte_end":15502,"line_start":452,"line_end":452,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":16940,"byte_end":16948,"line_start":482,"line_end":482,"column_start":12,"column_end":20},"name":"finalize","qualname":"<State>::finalize","value":"pub fn finalize(&Self) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" Finalize the state and return a `Hash`. This method is idempotent, and calling it multiple\n times will give the same result. It's also possible to `update` with more input in between.\n","sig":null,"attributes":[{"value":"/ Finalize the state and return a `Hash`. This method is idempotent, and calling it multiple","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":16734,"byte_end":16828,"line_start":480,"line_end":480,"column_start":5,"column_end":99}},{"value":"/ times will give the same result. It's also possible to `update` with more input in between.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":16833,"byte_end":16928,"line_start":481,"line_end":481,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":17931,"byte_end":17944,"line_start":506,"line_end":506,"column_start":12,"column_end":25},"name":"set_last_node","qualname":"<State>::set_last_node","value":"pub fn set_last_node(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set a flag indicating that this is the last node of its level in a tree hash. This is\n equivalent to [`Params::last_node`], except that it can be set at any time before calling\n `finalize`. That allows callers to begin hashing a node without knowing ahead of time\n whether it's the last in its level. For more details about the intended use of this flag\n [the BLAKE2 spec].","sig":null,"attributes":[{"value":"/ Set a flag indicating that this is the last node of its level in a tree hash. This is","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":17382,"byte_end":17471,"line_start":498,"line_end":498,"column_start":5,"column_end":94}},{"value":"/ equivalent to [`Params::last_node`], except that it can be set at any time before calling","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":17476,"byte_end":17569,"line_start":499,"line_end":499,"column_start":5,"column_end":98}},{"value":"/ `finalize`. That allows callers to begin hashing a node without knowing ahead of time","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":17574,"byte_end":17663,"line_start":500,"line_end":500,"column_start":5,"column_end":94}},{"value":"/ whether it's the last in its level. For more details about the intended use of this flag","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":17668,"byte_end":17760,"line_start":501,"line_end":501,"column_start":5,"column_end":97}},{"value":"/ [the BLAKE2 spec].","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":17765,"byte_end":17787,"line_start":502,"line_end":502,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":17792,"byte_end":17795,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ [`Params::last_node`]: struct.Params.html#method.last_node","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":17800,"byte_end":17862,"line_start":504,"line_end":504,"column_start":5,"column_end":67}},{"value":"/ [the BLAKE2 spec]: https://blake2.net/blake2.pdf","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":17867,"byte_end":17919,"line_start":505,"line_end":505,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":18361,"byte_end":18366,"line_start":519,"line_end":519,"column_start":12,"column_end":17},"name":"count","qualname":"<State>::count","value":"pub fn count(&Self) -> Count","parent":null,"children":[],"decl_id":null,"docs":" Return the total number of bytes input so far.","sig":null,"attributes":[{"value":"/ Return the total number of bytes input so far.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":18143,"byte_end":18193,"line_start":515,"line_end":515,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":18198,"byte_end":18201,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ Note that `count` doesn't include the bytes of the key block, if any.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":18206,"byte_end":18279,"line_start":517,"line_end":517,"column_start":5,"column_end":78}},{"value":"/ It's exactly the total number of input bytes fed to `update`.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":18284,"byte_end":18349,"line_start":518,"line_end":518,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":806},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":20084,"byte_end":20088,"line_start":581,"line_end":581,"column_start":12,"column_end":16},"name":"Hash","qualname":"::Hash","value":"Hash {  }","parent":null,"children":[{"krate":0,"index":807},{"krate":0,"index":809}],"decl_id":null,"docs":" A finalized BLAKE2 hash, with constant-time equality.\n","sig":null,"attributes":[{"value":"/ A finalized BLAKE2 hash, with constant-time equality.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":19992,"byte_end":20049,"line_start":579,"line_end":579,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":20314,"byte_end":20322,"line_start":589,"line_end":589,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Hash>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Convert the hash to a byte slice. Note that if you're using BLAKE2 as a MAC, you need\n constant time equality, which `&[u8]` doesn't provide.\n","sig":null,"attributes":[{"value":"/ Convert the hash to a byte slice. Note that if you're using BLAKE2 as a MAC, you need","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":20150,"byte_end":20239,"line_start":587,"line_end":587,"column_start":5,"column_end":94}},{"value":"/ constant time equality, which `&[u8]` doesn't provide.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":20244,"byte_end":20302,"line_start":588,"line_end":588,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":20646,"byte_end":20654,"line_start":597,"line_end":597,"column_start":12,"column_end":20},"name":"as_array","qualname":"<Hash>::as_array","value":"pub fn as_array(&Self) -> &[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Convert the hash to a byte array. Note that if you're using BLAKE2 as a\n MAC, you need constant time equality, which arrays don't provide. This\n panics in debug mode if the length of the hash isn't `OUTBYTES`.\n","sig":null,"attributes":[{"value":"/ Convert the hash to a byte array. Note that if you're using BLAKE2 as a","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":20393,"byte_end":20468,"line_start":593,"line_end":593,"column_start":5,"column_end":80}},{"value":"/ MAC, you need constant time equality, which arrays don't provide. This","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":20473,"byte_end":20547,"line_start":594,"line_end":594,"column_start":5,"column_end":79}},{"value":"/ panics in debug mode if the length of the hash isn't `OUTBYTES`.","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":20552,"byte_end":20620,"line_start":595,"line_end":595,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":20625,"byte_end":20634,"line_start":596,"line_end":596,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":20916,"byte_end":20922,"line_start":604,"line_end":604,"column_start":12,"column_end":18},"name":"to_hex","qualname":"<Hash>::to_hex","value":"pub fn to_hex(&Self) -> HexString","parent":null,"children":[],"decl_id":null,"docs":" Convert the hash to a lowercase hexadecimal\n [`ArrayString`](https://docs.rs/arrayvec/0.4/arrayvec/struct.ArrayString.html).\n","sig":null,"attributes":[{"value":"/ Convert the hash to a lowercase hexadecimal","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":20769,"byte_end":20816,"line_start":602,"line_end":602,"column_start":5,"column_end":52}},{"value":"/ [`ArrayString`](https://docs.rs/arrayvec/0.4/arrayvec/struct.ArrayString.html).","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":20821,"byte_end":20904,"line_start":603,"line_end":603,"column_start":5,"column_end":88}}]},{"kind":"Mod","id":{"krate":0,"index":457},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":22592,"byte_end":22602,"line_start":664,"line_end":664,"column_start":9,"column_end":19},"name":"benchmarks","qualname":"::benchmarks","value":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","parent":null,"children":[{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":459},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":22635,"byte_end":22649,"line_start":667,"line_end":667,"column_start":12,"column_end":26},"name":"force_portable","qualname":"::benchmarks::force_portable","value":"pub fn force_portable(&mut Params)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":460},"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":22757,"byte_end":22780,"line_start":671,"line_end":671,"column_start":12,"column_end":35},"name":"force_portable_blake2bp","qualname":"::benchmarks::force_portable_blake2bp","value":"pub fn force_portable_blake2bp(&mut blake2bp::Params)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":79136,"byte_end":79142,"line_start":77,"line_end":77,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":83175,"byte_end":83181,"line_start":182,"line_end":182,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":83260,"byte_end":83266,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":84603,"byte_end":84608,"line_start":232,"line_end":232,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":92256,"byte_end":92261,"line_start":415,"line_end":415,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":267},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":92476,"byte_end":92481,"line_start":426,"line_end":426,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":92720,"byte_end":92725,"line_start":437,"line_end":437,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/guts.rs","byte_start":98781,"byte_end":98795,"line_start":27,"line_end":27,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/guts.rs","byte_start":102596,"byte_end":102599,"line_start":144,"line_end":144,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/guts.rs","byte_start":103103,"byte_end":103111,"line_start":164,"line_end":164,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/guts.rs","byte_start":103386,"byte_end":103394,"line_start":180,"line_end":180,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/guts.rs","byte_start":103663,"byte_end":103669,"line_start":195,"line_end":195,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":126672,"byte_end":126683,"line_start":278,"line_end":278,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":128331,"byte_end":128342,"line_start":330,"line_end":330,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":5866,"byte_end":5872,"line_start":162,"line_end":162,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":396},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":403},{"krate":0,"index":405},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":12064,"byte_end":12070,"line_start":342,"line_end":342,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":12149,"byte_end":12155,"line_start":348,"line_end":348,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":13567,"byte_end":13572,"line_start":400,"line_end":400,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":19247,"byte_end":19252,"line_start":547,"line_end":547,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":19467,"byte_end":19472,"line_start":558,"line_end":558,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":19841,"byte_end":19846,"line_start":571,"line_end":571,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":20139,"byte_end":20143,"line_start":586,"line_end":586,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":21358,"byte_end":21362,"line_start":620,"line_end":620,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":21607,"byte_end":21611,"line_start":627,"line_end":627,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":21744,"byte_end":21748,"line_start":633,"line_end":633,"column_start":13,"column_end":17},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":21774,"byte_end":21778,"line_start":635,"line_end":635,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":21866,"byte_end":21870,"line_start":641,"line_end":641,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":2449,"byte_end":2457,"line_start":57,"line_end":57,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":215}},{"kind":"Mod","span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":2477,"byte_end":2481,"line_start":59,"line_end":59,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":324}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":79136,"byte_end":79142,"line_start":77,"line_end":77,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":83175,"byte_end":83181,"line_start":182,"line_end":182,"column_start":18,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":637},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":83260,"byte_end":83266,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":637},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":84603,"byte_end":84608,"line_start":232,"line_end":232,"column_start":6,"column_end":11},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":645},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":92256,"byte_end":92261,"line_start":415,"line_end":415,"column_start":25,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":645},"to":{"krate":1,"index":3179}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":92476,"byte_end":92481,"line_start":426,"line_end":426,"column_start":21,"column_end":26},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":645},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/blake2bp.rs","byte_start":92720,"byte_end":92725,"line_start":437,"line_end":437,"column_start":18,"column_end":23},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":645},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/guts.rs","byte_start":98781,"byte_end":98795,"line_start":27,"line_end":27,"column_start":6,"column_end":20},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":678},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/guts.rs","byte_start":102596,"byte_end":102599,"line_start":144,"line_end":144,"column_start":35,"column_end":38},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":297},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/guts.rs","byte_start":103103,"byte_end":103111,"line_start":164,"line_end":164,"column_start":6,"column_end":14},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/guts.rs","byte_start":103386,"byte_end":103394,"line_start":180,"line_end":180,"column_start":6,"column_end":14},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":696},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/guts.rs","byte_start":103663,"byte_end":103669,"line_start":195,"line_end":195,"column_start":6,"column_end":12},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":126672,"byte_end":126683,"line_start":278,"line_end":278,"column_start":10,"column_end":21},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/many.rs","byte_start":128331,"byte_end":128342,"line_start":330,"line_end":330,"column_start":25,"column_end":36},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":728},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":5866,"byte_end":5872,"line_start":162,"line_end":162,"column_start":6,"column_end":12},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":741},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":12064,"byte_end":12070,"line_start":342,"line_end":342,"column_start":18,"column_end":24},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":741},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":12149,"byte_end":12155,"line_start":348,"line_end":348,"column_start":21,"column_end":27},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":741},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":13567,"byte_end":13572,"line_start":400,"line_end":400,"column_start":6,"column_end":11},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":774},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":19247,"byte_end":19252,"line_start":547,"line_end":547,"column_start":25,"column_end":30},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":774},"to":{"krate":1,"index":3179}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":19467,"byte_end":19472,"line_start":558,"line_end":558,"column_start":21,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":774},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":19841,"byte_end":19846,"line_start":571,"line_end":571,"column_start":18,"column_end":23},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":774},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":20139,"byte_end":20143,"line_start":586,"line_end":586,"column_start":6,"column_end":10},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":806},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":21358,"byte_end":21362,"line_start":620,"line_end":620,"column_start":20,"column_end":24},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":806},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":21607,"byte_end":21611,"line_start":627,"line_end":627,"column_start":26,"column_end":30},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":806},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":21744,"byte_end":21748,"line_start":633,"line_end":633,"column_start":13,"column_end":17},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":806},"to":{"krate":2,"index":1795}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":21774,"byte_end":21778,"line_start":635,"line_end":635,"column_start":22,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":806},"to":{"krate":2,"index":1980}},{"span":{"file_name":"/home/tardigrade/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.11/src/lib.rs","byte_start":21866,"byte_end":21870,"line_start":641,"line_end":641,"column_start":21,"column_end":25},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":806},"to":{"krate":2,"index":6831}}]}